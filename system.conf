#========================================================================
# Copyright (C) GemTalk Systems 1986-2019. All Rights Reserved.
#
# Name - system.conf
#
# Purpose - Default System-wide Configuration File
#
# As this file is shipped, all default configuration options are commented 
# out. Configuration options without a default have a definition here. 
# All options also include a short explanation of purpose.
#
# Configuration option strings are case-INSENSITIVE.
#
# In general, this file is read ONCE by an application at initialization.
#
# Certain options accept a list, i.e., of integers or strings.
# These options allow list elements to be omitted, e.g.,
#
#	DBF_EXTENT_SIZES = 1999, , 1999;
#
# If an option is defined more than once, the last definition is used.
#
# Unless the option name begins with "GEM_" or unless the comments state
# "Used by all executables",  the option is processed only by stone.
#
# For options which affect all database sessions but which are only processed
# by stone, the other executables will obtain the value of that option from
# stone via a TCP/IP connection to stone.
#
# $Id: config.unix 46052 2019-05-03 17:11:36Z lalmarod $
#=========================================================================

#=========================================================================
# CONFIG_WARNINGS_FATAL  
#  If TRUE then any warning about invalid or out of range entries
#  in a config file is treated as a fatal error terminating the
#  process (gem or stone) that is parsing config files.
#  The last occurrence of this config item in any config file parsed
#  will control the value used. If the last occurrence is TRUE,
#  then any warnings from parsing preceding config items will
#  be treated as fatal.
# Default: FALSE
#  CONFIG_WARNINGS_FATAL = FALSE;

#=========================================================================
# DBF_ALLOCATION_MODE:  Description of space allocation heuristic to be used
#  when filling DBF extents. 
#  Permissible values: either SEQUENTIAL, or a list of allocation weights,
#    separated by commas, each weight corresponding to each extent in the
#    series of extents specified in DBF_EXTENT_NAMES. 
#  A single value must be >= 5 and <= 200. If multiple values are used,
#  the total must be > 0 and each element must be >= 0 .
# Default: SEQUENTIAL
#DBF_ALLOCATION_MODE = SEQUENTIAL;

#=========================================================================
# DBF_EXTENT_NAMES:  List of all DBF extents, in order, primary extent first,
#  separated by commas.
# Default: NONE -- stone will not run without an extent list defined.
# A value for this option is provided at the end of this file.
# On Linux, CIFS filesystems are not allowed for extents.

#=========================================================================
# DBF_EXTENT_SIZES: List of maximum sizes of all DBF extents, in order, 
#  primary extent first, separated by commas, each size applies to  the
#  corresponding extent in the list of extents specified in DBF_EXTENT_NAMES.
#
#  For optimal performance using a raw Unix disk partition, this setting
#  should be at least 16 MB smaller than the actual size of the partition.
#
#  Note: The actual maximum size of an extent will always be a multiple of
#        16 MB. If an extent size specified by DBF_EXTENT_SIZES is not a
#        multiple of 16 MB, then the actual maximum size will be the next
#        **lowest** multiple of 16 MB. For example, an extent created with
#        a maximum size of 260 MB, this extent really has a maximum size
#        of only 256 MB.
#
#  Elements of the list may be blank to specify maximum sizes for some
#  but not all extents, such as:
#	DBF_EXTENT_SIZES = 2048MB, , 2048MB;
#
# Default units: M Bytes (1 Megabyte = 1048576 bytes), suffixes KB, MB, GB 
#   may be used to specify units.
# Default: empty (no maximum sizes, extent can grow until disk fills)
# minimum 16MB, maximum 33554432MB
#DBF_EXTENT_SIZES = ;

#=========================================================================
# DBF_PRE_GROW:  Pre-grow DBF extent sizes.
#
# When this is set to TRUE and there are extents for which a size is set 
# in DBF_EXTENT_SIZES, each extent with a size in DBF_EXTENT_SIZES will be 
# pregrown to that size.
# 
# The value of DBF_PRE_GROW may also be a list of integer sizes. Extents with 
# an integer size specified in DBF_PRE_GROW will be pregrown to this size if 
# needed. It is an error if a (non-blank) DBF_PRE_GROW size is larger than 
# a (non-blank) value for an extent in DBF_EXTENT_SIZES. Extents without an 
# entry in DBF_PRE_GROW will not be pregrown .
#
# Elements of DBF_PRE_GROW may be blank to specify pregrow sizes for some
# but not all extents, such as:
#	DBF_PRE_GROW = 1000MB, , 1000MB;
#
# Default units: M Bytes (1 Megabyte = 1048576 bytes), suffixes KB, MB, GB 
#   may be used to specify units.
# Default:  FALSE
# minimum 16MB, maximum 33554432MB
#DBF_PRE_GROW = FALSE;

#=========================================================================
# DBF_SCRATCH_DIR:  A scratch directory that the stone process can use to
#  create "scratch" DBFs, used during pageaudit and page repair. The file
#  name is appended to the directory name WITHOUT an intervening delimiter,
#  so a trailing delimiter is necessary here.
# Default: $GEMSTONE/data/
#DBF_SCRATCH_DIR = $GEMSTONE/data/;

#=========================================================================
# DelayAutoServiceSigAbort 
#
# Runtime-only config option, applicable only in a session in which
#  System class >> clientIsRemote returns true .
#
# Affects operation of GemAutoServiceSigAbort config option.
# The runtime-only config option  DelayAutoServiceSigAbort can be used
# to set an internal delay counter to a specified value, the delivery of
# the error 3007 will be delayed for the specified number of GCI calls
# received by the gem; this is to facilitate testing. 
#
# Runtime name: #DelayAutoServiceSigAbort 
# Default value zero, min 0, max 16r7FFFFFFF.

#=========================================================================
# DUMP_OPTIONS:  Dump summary of all configuration options applicable to
#  the executable reading the config file.
#
#  Used by all executables.
# Default: TRUE
#DUMP_OPTIONS = TRUE;

#=========================================================================
# GEM_ABORT_MAX_CRS
#
# When a Gem is not in a transaction and aborts, this specifies the
# maximum number of commit records to analyze to compute the writeSetUnion
# since the last time this session aborted. If the number of commit records
# would exceed this limit, the abort is treated similar to a LostOt and
# all in-memory copies of committed objects are marked invalid and will be
# re-read as needed during subsequent execution. 
#
# A value of 0 (zero) means no limit on number of commit records to analyze.
# Has no effect in a Solo session (login with GCI_LOGIN_SOLO).
#
# Runtime equivalent: #GemAbortMaxCrs
# Default: 0  Min: 0, Max: 2147483647
#GEM_ABORT_MAX_CRS = 0;

#=========================================================================
# GemAutoServiceSigAbort
#
# Runtime-only config option, applicable only in a session in which
#  System class >> clientIsRemote returns true .
#
# When the session's transaction mode is autoBegin or transactionless 
# the gem process will automatically service any sigAbort received 
# when there is no Gci traversal in progress and the gem is waiting for 
# the next GCI command. After auto servicing of one or more sigAbort, 
# the next GCI command will signal a TransactionBacklog with error 
# number 3007 .
# After auto servicing of a sigAbort, the "GciAlteredObjs" portion of
# the traversal result of the next GciStoreTravDoTravRefs will include
# the result of writeSetUnion of commits by other sessions since last 
# GciStoreTravDoTravRefs intersected with the PureExportSet .
#
# See also DelayAutoServiceSigAbort  .
#
# Runtime name:  #GemAutoServiceSigAbort
# Default value: false 

#=========================================================================
# GEM_CACHE_WARMER_ARGS
#
# Configures cache warming when a remote shared page cache is started
# by login of a remote gem.  Not used by startnetldi -S -E .
# If it is an empty string (the default), no cache warming is done.
# If it is set to a string containing spaces, a default cache warmer is started.
# Otherwise, the value should contain valid startcachewarmer options and
# values that will be used to invoke the cache warmer on the remote cache.
#
# startcachewarmer arguments may be obtained using startcachewarmer -h. 
# Since the stone is known and the cache is already started the only 
# arguments used are:
#  -d    read data pages into the cache, if working set file does not exist.
#  -D    read data pages into the file system buffers, if working set file 
#        does not exist.
#  -l    stop cache warming if the free frame count is below specified limit. 
#  -L    path to a writable log file directory.
#  -n <integer> number of warmer threads to use. 
#  -w <integer>  enable saving a workingSet of data pages that will be restored on
#        subsequent warming. The workingSet file will be written by the shrpcmonitor
#        at  given interval in minutes.
# Without -d , only object table pages are read into the cache .
#
# This option is only used by remote gems that create a remote shared page
# cache. It is ignored by all other gems.
# Has no effect in a Solo session (login with GCI_LOGIN_SOLO).
#
# To specify starting the remote cache warmer with all default args use " ", 
#   i.e., a string with at least one space so that the argument is not empty.
#
# Example: Start a cache warmer with 5 threads and write the working set on
# cache shutdown:
# GEM_CACHE_WARMER_ARGS = "-n 5 -w 0";
#
# Default: "" (cache warmer will not be started)
#GEM_CACHE_WARMER_ARGS = "";

#=========================================================================
# GEM_CACHE_WARMER_MID_CACHE_ARGS
#
# Configures cache warming when a mid-level cache is started.
# The cache start may be triggered by System class >> midLevelCacheConnect:options: .
# Not used by startnetldi -S -E .
# If it is an empty string (the default), no cache warming is done.
# If it is set to a string containing spaces, a default cache warmer is started.
# Otherwise, the value should contain valid startcachewarmer options and
# values that will be used to invoke the cache warmer on the mid-level cache.
#
# startcachewarmer arguments may be obtained using startcachewarmer -h.
# Since the stone is known and the cache is already started the only
# arguments used are:
#  -d    read data pages into the cache, if working set file does not exist.
#  -D    read data pages into the file system buffers, if working set file 
#        does not exist.
#  -l    stop cache warming if the free frame count is below specified limit.
#  -L    path to a writable log file directory.
#  -n <integer>  number of warmer threads to use.
#  -w <integer>  enable saving a workingSet of data pages that will be restored on
#        subsequent warming. The workingSet file will be written by the shrpcmonitor
#        at  given interval in minutes.
#
# To specify starting the mid-level cache warmer with all default args use " ",
#   i.e., a string with at least one space so that the argument is not empty.
#
# This option is only used by remote gems that create a mid-level shared
# page cache. It is ignored by all other gems.
# Has no effect in a Solo session (login with GCI_LOGIN_SOLO).
#
# Example: Start a cache warmer with 3 threads and write the working set on
# cache shutdown:
# GEM_CACHE_WARMER_MID_CACHE_ARGS = "-n 3 -w 0";
#
# Default: "" (cache warmer is not started)
#GEM_CACHE_WARMER_MID_CACHE_ARGS = "";

#=========================================================================
# GemCommitConflictDetails
#
# Runtime-only config option for the gem, enabled by
#   System gemConfigurationAt: #GemCommitConflictDetails put: true 
# Default is false.
# When true , System class >> conflictsReport and System class >> transactionConflicts
# Return details about which session(s) caused commit conflicts.

#=========================================================================
# GemCommitStubsForNpObjects
#
# Runtime-only config option for the gem, enabled by
#   System gemConfigurationAt: #GemCommitStubsForNpObjects put: true 
#
# If true, an invariant String will be committed in place of an instance
# of a class which has the instancesNonPersistent option ,
# instead of signalling TransactionError 2407 .

#=========================================================================
# GEM_COMPRESS_TRANLOG_RECORDS
#
# If true, sessions will compress tranlog data records using lz4 compression
# before sending them to stone . 
# Has no effect in a Solo session (login with GCI_LOGIN_SOLO).
#
# Default: true  
#GEM_COMPRESS_TRANLOG_RECORDS = TRUE;

#=========================================================================
# GemConfigFileNames
#
# Runtime read-only config option 
#   System gemConfigurationAt: #GemConfigFileNames
# Returns an Array , { systemConfigFileName . exeConfigFileName }

#=========================================================================
# GemConvertArrayBuilder
#
# Runtime-only config option for the gem, enabled by 
#   System gemConfigurationAt:#GemConvertArrayBuilder put: true
#
# When true, source strings of methods and executions(i.e. doit's)
# are passed through a pre-processor to convert legacy style ArrayBuilder
# to CurlyArrayBuilder per $GEMSTONE/doc/bnf.txt . See class methods
# in GsNMethod, category 'Converting ArrayBuilders', for more details.

#=========================================================================
# GemDropCommittedExportedObjs 
#
# Runtime-only config option for the gem, enabled by
#   System gemConfigurationAt:#GemDropCommittedExportedObjs put: true
#
# When true, objects in the exportSet of a gem, which are committed
# and not dirty, are allowed to drop out of memory during GC of
# temporary object memory. When true, there is a small extra
# cost during object faults to test whether the object being faulted
# in is in the exportSet. 
# Default is false .

#=========================================================================
# GemExceptionSignalCapturesStack 
#
# Runtime-only config option for the gem, enabled by
#   System gemConfigurationAt:#GemExceptionSignalCapturesStack put: true
# 
# When true, primitive 2022 ( AbstractException>>_signalWith: )
# fill in the gsStack instVar of the receiver , so that 
# you can later send  stackReport  to the instance of AbstractException .
# See also AbstractException>>stackReport . 
# Default for Smalltalk is false . 
# Maglev Ruby VM initialization sets this to true.

#=========================================================================
# GEM_FREE_FRAME_CACHE_SIZE
#
#  Determines the size of the gem's free frame cache. When using the
#  free frame cache, the gem removes enough frames from the free frame
#  list to refill the cache in a single operation. When adding frames to
#  the free list, the gem will not add them to the list until the free 
#  frame cache is full.
#
#  A value of 0 disables the free frame cache (the gem acquires frames one
#  at a time). A value of -1 means use the default value. The default is
#  0 for caches less than 100 MB and 10 for caches of 100 MB or greater
#  size.
#  Has no effect in a Solo session (login with GCI_LOGIN_SOLO).
#  
#  Cache Statistic: (Gem) FreeFrameCacheSize
#
# Units: Frames, Min: -1, Max: 63
# Default: -1
#GEM_FREE_FRAME_CACHE_SIZE = -1;

#=========================================================================
# GEM_FREE_FRAME_LIMIT:  When the number of free frames in the shared
#  page cache is less than this limit, the Gem will scan the cache for
#  a free frame rather than use one from the free frame list (to allow
#  the Stone process to use the remaining free frames). 
#
#  If the value of the parameter is -1, the free frame limit is set to a
#  default value. For caches up to and including 800 MB (50,000 frames),
#  the default is one tenth the cache size. For caches larger than 800 MB,
#  the default is 5000 frames. On remote shared page caches, the default
#  is zero for all cache size.
#  Has no effect in a Solo session (login with GCI_LOGIN_SOLO).
#  
#  Runtime equivalent: #GemFreeFrameLimit
#  
#  Cache Statistic: (Gem) FreeFrameLimit
#
#  Default: see above, min: -1, max: 65536
#GEM_FREE_FRAME_LIMIT = -1;

#=========================================================================
# GEM_FREE_PAGEIDS_CACHE
# Specifies maximum number of free pageIds to be cached in gem.
# Larger values reduce number of calls to stone, at cost of needing
# more free space within the extents.
#  Has no effect in a Solo session (login with GCI_LOGIN_SOLO).
#
#  Runtime equivalent: #GemFreePageIdsCache
# Default: 200 , min: 40, max: 3500
#GEM_FREE_PAGEIDS_CACHE=200;

#=========================================================================
# GEM_HALT_ON_ERROR
# Cause Gem to halt and dump core if an error with the specified 
# GemStone error number occurs. The value 0 means "never halt". 
# Normally used only to assist GemStone Customer Support in diagnosing problems.
# A value of -2 causes printing of details of all error 2101 occurrances.
#  Runtime equivalent: #GemHaltOnError,
#  Default: -1, Min: -2147483648  Max: 2147483647 .
#GEM_HALT_ON_ERROR = -1;

#=========================================================================
# GEM_KEEP_MIN_SOFTREFS
# The minimum number of most recently used SoftReferences  that will
# not be cleared by VM markSweep if startingMemUsed(see GEM_SOFTREF_CLEANUP_PERCENT_MEM) 
# is less than 80%. Most applications should leave this at 0 .
#
# Runtime equivalent: #GemKeepMinSoftRefs
# Default: 0
#   min: 0 max: 10000000
#GEM_KEEP_MIN_SOFTREFS = 0 ;

#=========================================================================
# GEM_KERBEROS_KEYTAB_FILE
# Path to the Kerberos key table file. The keytab file only is required
# when passwordless logins to GemStone are in use. The file contains
# pairs of Kerberos principals and encrypted keys. In this case, the
# Kerberos service is the service for a GemStone repository.
#
# Refer to the GemStone System Administration Guide to learn about
# creating and maintaining this file.
#
# Default: NONE
# GEM_KERBEROS_KEYTAB_FILE="";

#=========================================================================
# GEM_KEYRING_DIRS
# A list of directories which contain keys and certificates used for 
# secure backup and restore.
#
# Runtime equivalent: #GemKeyRingDirs
# Default: NONE
# GEM_KEYRING_DIRS="";

#=========================================================================
# GEM_MAX_SMALLTALK_STACK_DEPTH
#   Size of GemStone Smalltalk execution stack space allocated at GciLogin time,
#   in units of approximate number of method activations. 
#   Causes heap memory allocation of approximately 64 bytes per activation.
# Default: 1000 min: 100 
#  max: 30000 for native code on Intel CPU, 1000000 otherwise
#GEM_MAX_SMALLTALK_STACK_DEPTH = 1000;

#=========================================================================
# GEM_NATIVE_CODE_ENABLED
#
# An integer, 0, 1, or 2.
# 0 disables native code, 1 enables native code, 
# 2 enables native code with inlining of some SmallInteger math primitives
# For compatibility with old config files, may be also set to TRUE or FALSE.
# FALSE is equivalent to zero, and TRUE is equivalent to 2.
#
# Runtime equivalent: #GemNativeCodeEnabled can be used
#   to control whether subsequent GsProcesses start execution
#   using interpreted or native code, and to disable native code if previously
#   enabled. The generation of native code for methods as they are loaded for 
#   execution can only be controlled by the value of GEM_NATIVE_CODE_ENABLED 
#   from config files at VM startup.
#
# Default: 2 min: 0 max: 2
#GEM_NATIVE_CODE_ENABLED = 2;

#=========================================================================
# GEM_PGSVR_COMPRESS_PAGE_TRANSFERS
#
#  If TRUE, use  LZ4_compress() from the LZ4 compression library to
#  compress page transfers between page server on stone's machine
#  and gem or mid-cache page server.
#
#  For the first gem to login on a remote machine, that Gem's config file 
#  value of this parameter is propagated to the pagemanager and used to 
#  configure the pagemanager's communication to pagemanager's page server
#  on the new remote cache.
#
#  When a gem triggers creation of a mid-level cache,
#  via the method    midLevelCacheConnect:cacheSizeKB:maxSessions:  
#  that Gem's current runtime value of this parameter is propagated to 
#  the pagemanager and used to configure the pagemanager's communication 
#  to pagemanager's page server on the new mid-level cache.
#
#   Value is ignored and TRUE is always used 
#   if GEM_PGSVR_USE_SSL=TRUE or if session was created by GciX509login.
#  Has no effect in a Solo session (login with GCI_LOGIN_SOLO).
#
# Runtime equivalent: #GemPgsvrCompressPageTransfers
# Default: TRUE
#GEM_PGSVR_COMPRESS_PAGE_TRANSFERS = TRUE;

#=========================================================================
# GEM_PGSVR_FREE_FRAME_CACHE_SIZE
#
#  Determines the size of the free frame cache used by the gem's remote
#  page server. Has no effect for gems local to the repository extents
#  (which do not have a page server). When using a free frame cache, 
#  page server removes enough frames from the free frame list to refill
#  the cache in a single operation. When adding frames to the free list,
#  the page server will not add them to the list until the free frame
#  cache is full.
#
#  A value of 0 disables the free frame cache (the page server acquires
#  frames one at a time). A value of -1 means use the default value. 
#  The default is 0 for shared page caches less than 100 MB in size and
#  10 for caches of 100 MB or greater in size.
#  Has no effect in a Solo session (login with GCI_LOGIN_SOLO).
#  
#  Cache Statistic: (Page Server) FreeFrameCacheSize  
#
# Units: Frames, Min: -1, Max: 63
# Default: -1
#GEM_PGSVR_FREE_FRAME_CACHE_SIZE = -1;

#=========================================================================
# GEM_PGSVR_FREE_FRAME_LIMIT:
#
#    Determines the free frame limit used by the gem's remote page server.
#    Has no effect for gems local to the repository extents (which do not
#    have a page server).
#
#    See GEM_FREE_FRAME_LIMIT for a description of free frame limits.
#
#    If the value of the parameter is -1, the free frame limit is set to
#    a default value. For caches up to and including 800 MB (50,000 frames),
#    the default is one tenth the cache size. For caches larger than 800 MB,
#    the default is 5000 frames.
#
#    The free frame limit of a page server may be tuned at runtime using
#    the following method:
#  Has no effect in a Solo session (login with GCI_LOGIN_SOLO).
#
#    System(C)>>#changeCacheSlotFreeFrameLimit: aSlot to: aValue
#
#    Cache Statistic: (Page Server) FreeFrameLimit
#
# Default: 1/10 cache size
# Min: -1  Max: 65536
#
#GEM_PGSVR_FREE_FRAME_LIMIT = -1;

#=========================================================================
# GEM_PGSVR_UPDATE_CACHE_ON_READ
#
#    Determines the read behavior of the gem's remote page server when
#    pages are read from disk. If this option is set to TRUE, pages read
#    from disk are also added to the shared page cache on the page server's
#    host. If this option is FALSE, pages read are not added to the page 
#    server's shared cache.
#
#    Has no effect for gems local to the repository extents (local gems 
#    are those running on stone's machine).
#
#    Has no effect on a mid-level cache. On a mid-level cache
#    a cache miss always updates the mid-level cache with the result
#    obtained from reading the page from stone's cache or disk.
#  Has no effect in a Solo session (login with GCI_LOGIN_SOLO).
#
# Runtime equivalent: #GemPgsvrUpdateCacheOnRead
# Default: TRUE
#GEM_PGSVR_UPDATE_CACHE_ON_READ = TRUE;

#=========================================================================
# GEM_PGSVR_USE_SSL
#
#   Controls whether a remote gem uses a secure socket layer (SSL)
#   connection to converse with its page server(s), both the page server
#   on the stone's host and the page server on the mid-level cache, if 
#   any.
#
#   This option has no effect local gems (i.e., gems running on the same
#   host the stone process.).
#
#   Secure sockets are slightly slower than insecure sockets due to the
#   overhead of encrypting and decrypting data.
#
#   When enabling this option, consider also enabling the 
#   GEM_PGSVR_COMPRESS_PAGE_TRANSFERS option. SSL encodes no more than 
#   16 KB into a single packet and some messages sent between the gem and
#   page server may exceed this limit, causing SSL to send multiple 
#   encrypted packets to convey a single message.
#
#   Value ignored and TRUE is always used in session created by GciX509login.
#  Has no effect in a Solo session (login with GCI_LOGIN_SOLO).
#  Ignored if  STN_ANONYMOUS_SSL=TRUE in stone's config.
#
#  Default: FALSE
#GEM_PGSVR_USE_SSL = FALSE;

#=========================================================================
# GEM_PRIVATE_PAGE_CACHE_KB
# Size of gem's private page cache.
#
# Obsolete as of Gs64 version 3.5 - the private cache is no longer used.

#=========================================================================
# GEM_READ_AUTH_ERR_STUBS
#
# If TRUE, an in-memory instance of UnauthorizedObjectStub is constructed for
# an object fault during server execution instead of signaling
# a SecurityError for read authorization denied. Gci traversal operations
# that encounter a read authorization denied for an object will report
# that denial in the traversal buffer, without creating an instances
# of UnauthorizedObjectStub in the session's temporary object memory.
#  
# Runtime equivalent: #GemReadAuthErrStubs
# Default: FALSE
#GEM_READ_AUTH_ERR_STUBS = FALSE;

#=========================================================================
# GemRemoteCommit
#
# Only applies to X509-secured remote Gems.
#
# If TRUE, a gem on a remote gem will execute the critical region of 
# commit in the session's thread in the pgsvr or hostagent on stone host.
# Default is true if gem is remote and gem host has same byte order 
# as stone host and the gem is an X509 session.
# Can only be enabled if gem and stone host have same byte order and 
# the gem is an X509 session .
#
# Runtime name:  #GemRemoteCommit

#=========================================================================
# GEM_REPOSITORY_IN_MEMORY
#
#    Determines the performance behavior of the gem for certain operations
#    that scan the entire repository. If set to TRUE, the gem assumes
#    most or all of the data pages in the repository have been previously
#    loaded into the shared page cache. If set to FALSE, the gem assumes
#    most or all of the data pages in the repository are not in the 
#    shared page cache and must be read from disk.
#
#    This setting affects performance only. All operations affected by
#    this setting will succeed and produce the same results.
#         
#    Repository instance methods affected by this setting are:
#      findReferencePathToObject: (and related methods)
#      findAllReferencePathsToObjects: (and related methods)
#  Has no effect in a Solo session (login with GCI_LOGIN_SOLO).
#
# Runtime equivalent: #GemRepositoryInMemory
# Default: FALSE
#GEM_REPOSITORY_IN_MEMORY = FALSE;

#=========================================================================
# GEM_RPCGCI_TIMEOUT
#  Time in minutes after which lack of an Rpc Gci command will cause a Gem
#  to terminate. Negative timeouts are not allowed. Resolution of timeouts
#  is one half the specified timeout interval. 
#  Has no effect in a Solo session (login with GCI_LOGIN_SOLO).
#
#  Default: 0 (gem waits forever)  Min: 0
#GEM_RPCGCI_TIMEOUT = 0;

#=========================================================================
# GEM_RPC_KEEPALIVE_INTERVAL
#
#   Interval in seconds for the RPC GCI client to send a packet to the
#   gem to ensure the network connection is kept alive.
#   In legacy GCI (gci.hf) , controls how often 
#   keep-alive packets are sent during the GciPollForSignal() calls.
#   The application needs to be calling GciPollForSignal at regular 
#   At least as often as this config value.
#   In the thread safe GCI (gcits.hf) , the gem will send an interrupt
#   byte periodically, and the application must be calling 
#   GciTsWaitForEvent at least as often as this config value.
#  Has no effect in a Solo session (login with GCI_LOGIN_SOLO).
#   
#  Default: 0 (disabled)   Min: 0  Max: 7200
#
#GEM_RPC_KEEPALIVE_INTERVAL = 0;

#=========================================================================
# GEM_RPC_USE_SSL
#
#   Controls whether a remote RPC gem uses a secure socket layer
#   (SSL) connection to converse with its RPC client. RPC sessions always 
#   establish a secure connection during the login sequence. This 
#   parameter controls whether the gem and its remote RPC client continue
#   using the SSL connection. Otherwise, a standard TCP/IP socket 
#   connection is used.
#
#   This option has no effect for linked gems and local RPC gems (i.e.,
#   any gem running on the same host its client). Local gems always
#   revert to a standard TCP/IP socket after login.
#
#   Secure sockets are slightly slower than insecure sockets due to the
#   overhead of encrypting and decrypting data.
#   Ignored if  STN_ANONYMOUS_SSL=TRUE in stone's config.
#
#  Default: TRUE
#
#GEM_RPC_USE_SSL = TRUE;

#=========================================================================
# GEM_SOFTREF_CLEANUP_PERCENT_MEM : controls cleanup of SoftReferences .
# Let "startingMemUsed" be the percentage of temporary object memory in-use
# at the beginning if a VM markSweep .
# If startingMemUsed is less than the value of GEM_SOFTREF_CLEANUP_PERCENT_MEM,
# no SoftReferences will be cleared. If startingMemUsed is greater than
# GEM_SOFTREF_CLEANUP_PERCENT_MEM and less than 80% , then a varying
# number of least recently used SoftReferences will be cleared,
# but a minimum of GEM_KEEP_MIN_SOFTREFS will not be cleared .
# If startingMemUsed is greater than 80% then  VM markSweep will
# attempt to clear all SoftReferences.
#
# Runtime equivalent: #GemSoftRefCleanupPercentMem
# Default: 50
#   min: 10 max: 80
# GEM_SOFTREF_CLEANUP_PERCENT_MEM = 50 ;

#=========================================================================
# GEM_SOLO_EXTENT
#
# Has no effect unless a Gci login is using GCI_LOGIN_SOLO flag .
# A Solo session is produced by having the GCI_LOGIN_SOLO bit
# set in the loginFlags argument to GciLoginEx,
# or by using  SET SOLOLOGIN ON in topaz prior to LOGIN .
# The extent must be a repository that has only one extent.
# If not read-only on the filesystem, the extents must come from a clean 
# shutdown of stone, and will be opened with an exclusive file lock and 
# be useable by only one Solo session at a time.
#
# Default: $GEMSTONE/bin/extent0.dbf .
# GEM_SOLO_EXTENT = "$GEMSTONE/bin/extent0.dbf";

#=========================================================================
# GEM_STATMONITOR_ARGS
#
# A list of lists of arguments used to start one or more statmonitor
# processes. If the list is not an empty string, one statmonitor process
# for each element in the list will be automatically started. For legacy
# remote shared page caches, this option must appear in the configuration
# file for the remote gem which creates the remote shared page cache.
# For X509 remote shared page caches, this option must be specified in the
# configuration file passed to the remote netldi (-E option to
# startnetldi).
#
# The list of possible statmonitor arguments may be obtained by invoking
# statmonitor with only the "-h" argument. The first argument to
# statmonitor (the shared cache name) is automatically passed and must NOT
# be included.
#
# Has no effect in a Solo session (login with GCI_LOGIN_SOLO).
#
# A maximum of 64 argument lists may be specified. Each argument list
# must contain between 2 and 1023 characters. List elements must be
# contained within double quotes and separated by commas.
#
# Example: start two statmonitor processes, the first with a 10 second
#          sample interval and the second with a 60 second sample
#          interval. Both processes place a date and timestamp in the output
#          file name and place the output file in the directory
#          $GEMSTONE/data:
#
# GEM_STATMONITOR_ARGS =
#    "-i10 -u5 -F'$GEMSTONE/data/statmon10s_%%S_%%P_%d-%m-%y-%H:%M:%S'",
#    "-i60 -u5 -F'$GEMSTONE/data/statmon60s_%%S_%%P_%d-%m-%y-%H:%M:%S'";
#
# Default: "" (Statmonitor will not be started)
#GEM_STATMONITOR_ARGS = "";

#=========================================================================
# GEM_STATMONITOR_MID_CACHE_ARGS
#
# A list of lists of arguments used to start one or more statmonitor
# processes. If the list is not an empty string, one statmonitor process
# for each element in the list will be automatically started. For legacy
# mid-level shared page caches, this option must appear in the configuration
# file for the remote gem which creates the mid-level cache. For X509
# mid-level shared page caches, this option must be specified in the
# configuration file passed to the remote netldi (-E option to
# startnetldi).
#
# The list of possible statmonitor arguments may be obtained by invoking
# statmonitor with only the "-h" argument. The first argument to
# statmonitor (the shared cache name) is automatically passed and must NOT
# be included.
#
# Has no effect in a Solo session (login with GCI_LOGIN_SOLO).
#
# A maximum of 64 argument lists may be specified. Each argument list
# must contain between 2 and 1023 characters. List elements must be
# contained within double quotes and separated by commas.
#
# Example: start two statmonitor processes, the first with a 10 second
#          sample interval and the second with a 60 second sample
#          interval. Both processes place a date and timestamp in the output
#          file name and place the output file in the directory
#          $GEMSTONE/data:
#
# GEM_STATMONITOR_MID_CACHE_ARGS =
#    "-i10 -u5 -F'$GEMSTONE/data/statmon10s_%%S_%%P_%d-%m-%y-%H:%M:%S'",
#    "-i60 -u5 -F'$GEMSTONE/data/statmon60s_%%S_%%P_%d-%m-%y-%H:%M:%S'";
#
# Default: "" (Statmonitor will not be started)
#GEM_STATMONITOR_MID_CACHE_ARGS = "";

#=========================================================================
# GEM_TEMPOBJ_AGGRESSIVE_STUBBING: controls stubbing in in-memory GC.
#
# If inst var X in object A references object B, and X contains a memory
# pointer to B, then the reference is stubbed by storing into inst var X
# the objectId of object B .
# 
# If GEM_TEMPOBJ_AGGRESSIVE_STUBBING is TRUE, 
# references from temporary objects to in-memory copies
# of committed objects are stubbed whenever possible, during both scavenge
# and markSweep. Also, references from not-dirty in-memory 
# copies of committed objects  to other committed objects are stubbed
# whenever possible. This reduces the number of committed objects forced to 
# stay in-memory, but can slow down GC and subsequent execution.
#
# If GEM_TEMPOBJ_AGGRESSIVE_STUBBING is FALSE, 
# references from temporary objects to in-memory copies
# of committed objects are never stubbed. References from not-dirty in-memory 
# copies of committed objects  to other committed objects are stubbed after
# the number of objects flushed during commits reaches a threshold, or
# if almost OutOfMemory. Many applications will run faster with
# this configuration. Some applications that ran OK under Gemstone/S
# versions 2G or 6.x may get OutOfMemory under this configuration.
#
# Stubbing is always disabled when a commit attempt is in progress, regardless
# of the setting of this config parameter.
# Certain objects private to the object manager are always immune from stubbing,
# and so are references stored into Session State by using
#  System(c) >> _sessionStateAt:put:  .
#
# If GEM_TEMPOBJ_POMGEN_SIZE is configured to be more than 2 times
# the value of GEM_TEMPOBJ_CACHE_SIZE , then config file values for
# GEM_TEMPOBJ_AGGRESSIVE_STUBBING will be ignored and 
# GEM_TEMPOBJ_AGGRESSIVE_STUBBING will always be set to false, to ensure
# efficient operation of the garbage collector with very large POMGEN .
#
# Default: TRUE
#GEM_TEMPOBJ_AGGRESSIVE_STUBBING = TRUE;

#=========================================================================
# GEM_TEMPOBJ_CACHE_SIZE:  Maximum size of gem temporary object memory 
#  in K Bytes.
#
# This value is set at Gem initialization (linkable GciInit or rpc GciLogin)
# and cannot be changed without restarting the Gem process. 
# This value defines maximum memory sizes. The Gem will get/release
# virtual memory as needed as the actual space required for 
# in-memory objects grows/shrinks .
#
# Cache Statistic: (Gem) GemTempObjCacheSizeKb
# Default units: KB. Suffixes KB, MB, GB may be used to specify units.
# Default: 50000KB 
# min: 2000KB, max: 62GB
#GEM_TEMPOBJ_CACHE_SIZE = 50000KB;

#=========================================================================
# GEM_TEMPOBJ_CONSECUTIVE_MARKSWEEP_LIMIT: an in-memory gc control.
#
# If there are more consecutive in-memory mark sweeps than this value,
#  without any intervening successful in-memory scavenges, then an
#  OutOfMemory error will occur.
#
# Runtime equivalent: #GemTempObjConsecutiveMarksweepLimit
# Default:  50 
# min: 20 max: 5000
#GEM_TEMPOBJ_CONSECUTIVE_MARKSWEEP_LIMIT = 50;

#=========================================================================
# GEM_TEMPOBJ_MESPACE_SIZE: Size of the Map Entries space within
# the gem temporary object memory , in K Bytes .
# This value is set at Gem initialization (linkable GciInit or rpc GciLogin)
# and cannot be changed without restarting the Gem process.
#
# If this value is not specified, or the specified value is out of range,
# the default is used.
# The default value of 0 means the space size is calculated based on
# other memory sizes .
#
# One Map Entry is required for each faulted-in
# committed object. One Map Entry is required for any temporary object
# that might become committed , referenced from an IdentityBag, or
# exported to the GCI . One Map Entry occupies 32 bytes  .
# If a Map Entry is needed and Map Entries Space is full, an OutOfMemory
# will occur, terminating the session .
#
# Default units K Bytes,  suffixes KB, MB, GB may be used to specify units.
# Default : 0
#   min: 1000KB max: 2000000KB
#GEM_TEMPOBJ_MESPACE_SIZE = 0;

#=========================================================================
# GEM_TEMPOBJ_OOMSTATS_CSV
#   If TRUE, then when an Error 4067 OutOfMemory occurs, the detailed stats
#   of instances of classes in temporary memory are written to a
#   gemnetobject<pid>.csv file in CSV format.
#   For a topaz -l process, CSV data is written to a topaz<pid>.csv
#   file in current directory.
#
#   The config parameter GEM_TEMPOBJ_OOMSTATS_CSV and the environment variable
#   GS_DEBUG_VMGC_VERBOSE_OUTOFMEM operate independently. The environment
#   variable GS_DEBUG_VMGC_VERBOSE_OUTOFMEM controls writing the same
#   statistics information in standard legacy text (i.e. not CSV) to the
#   gem log or stdout.
#
# Runtime equivalent: #GemTempObjOomstatsCsv
#  Default: FALSE
#GEM_TEMPOBJ_OOMSTATS_CSV = FALSE;

#=========================================================================
# GEM_TEMPOBJ_OOPMAP_SIZE:  Size of the hash table in the objId to object map
#  in gem temporary object memory. The hash table is completely allocated at GciLogin
#  and consumes 8 bytes per entry. Entries in the hash table are nil, or
#  pointers to "Map Entries" which are allocated out of the  Map Entries space
#  (see below)
#
# This value is set at Gem initialization (linkable GciInit or rpc GciLogin)
# and cannot be changed without restarting the Gem process.
#
# If this value is not specified, or the specified value is out of range,
# the default is used. The value specified will be rounded up to the
# next higher power of 2 .
# The default value of 0 means the map is calculated based on memory sizes.
# Default : 0
#   min: 16384 max: 524288000
#GEM_TEMPOBJ_OOPMAP_SIZE = 0;

#=========================================================================
# GEM_TEMPOBJ_PERMGEN_SIZE 
# Size of the Perm generation of temporary object memory. 
# If the configuration value is zero the Perm generation
# is sized at 10% of CFG_GEM_TEMPOBJ_CACHE_SIZE up to a maximum of 30MB. 
# 
# Default units K Bytes,  suffixes KB, MB, GB may be used to specify units.
# Default : 0
# min: 200KB max: 100MB
# GEM_TEMPOBJ_PERMGEN_SIZE=0;

#=========================================================================
# GEM_TEMPOBJ_POMGEN_PRUNE_ON_VOTE: Percent of POM generation area
#   to be cleared when voting on possible dead objects.
#   If value is > 0 and < 100, subspaces of POM generation older 
#   than 5 minutes are cleared; the number of subspaces cleared is 
#   the specified percentage of spaces in use rounded down to an 
#   integral number of spaces.
#   If value == 100, all subspaces of POM generation are cleared without
#   regard to their age.
#
# If this value is not specified, or the specified value is out of range,
# the default is used.
#
# Runtime equivalent: #GemPomGenPruneOnVote
# Default: 50
#    min: 0  max: 100
#GEM_TEMPOBJ_POMGEN_PRUNE_ON_VOTE = 50;

#=========================================================================
# GEM_TEMPOBJ_POMGEN_SCAVENGE_INTERVAL:  Interval in seconds in which the
#   oldest POM gen subspace will be discarded. Lower values may reduce 
#   gem memory usage but may also cause objects to be re-read. Larger 
#   values may result in higher gem memory usage and may reduce disk I/O.
#
# Setting this value to zero disables scheduled POM gen scavenges. In this
# case, POM gen will only be scavenged when all subspaces become full.
#
# In versions prior to 2.4.0, this value was set to 240 seconds.
#
# Runtime equivalent: #GemTempObjPomgenScavengeInterval
#  Default: 1800  Min: 0  Max: 86400  Units: seconds
#GEM_TEMPOBJ_POMGEN_SCAVENGE_INTERVAL = 1800;

#=========================================================================
# GEM_TEMPOBJ_POMGEN_SIZE:  Size of POM generation area in
#   gem temporary object memory, in K Bytes .
# This value is set at Gem initialization (linkable GciInit or rpc GciLogin)
# and cannot be changed without restarting the Gem process.
# The POM generation holds unmodified copies of committed objects that
# have been faulted into a gem, and is divided into 10 subspaces .
#
# If this value is not specified, or the specified value is out of range,
# the default is used. The default value means allocated POM generation 
# will be a percentage of the GEM_TEMPOBJ_CACHE_SIZE, using interpolation in
# this table:
#   GEM_TEMPOBJ_CACHE_SIZE   multiplier 
#     <= 200MB                 0.8
#     600MB                    0.6
#     1GB                      0.27
#     5GB                      0.15
#    >5GB                      0.1
#
# Default units K Bytes,  suffixes KB, MB, GB may be used to specify units.
# Default : 0
#   min: 1000KB max: 2000000KB
#GEM_TEMPOBJ_POMGEN_SIZE = 0;

#=========================================================================
# GEM_TEMPOBJ_SCOPES_SIZE:  Size of scopes stack in gem temporary object GC
#
# This value is set at Gem initialization (linkable GciInit or rpc GciLogin)
# and cannot be changed without restarting the Gem process.
# Scopes stack consumes (8 bytes * GEM_TEMPOBJ_SCOPES_SIZE) of C heap memory.
#
# Primary user-visible effect of this setting is maximum depth of
# nested expressions that can be compiled by the method compiler.
# Default setting is sufficient for expression nesting of about 200, such as
# in depth of nested parenthesized expressions .
#
# Default: 2000
#   min: 1000 max: 10000000
#GEM_TEMPOBJ_SCOPES_SIZE = 2000 ;

#=========================================================================
# GEM_TEMPOBJ_START_ADDR
# Used on AIX only, if default mmap of temp obj memory fails.
# The value is used to define the starting address at which to
# attempt to mmap temp obj memory using MAP_FIXED at fixed
# addresses and munmap  to simulate MAP_NORESERVE. 
#
# A config file value of zero results in an internal default
# of 0xA00000000000000 for AIX 7, and 0x700000000000000 for AIX 6
# A non-default value must be coded as an exact address 
# and may be affected by use of mmap by other shared libraries .
#
# Default: 0 
#GEM_TEMPOBJ_START_ADDR = 0;

#=========================================================================
# INCLUDE
#
# Specifies the name of a file to be included into this config file
# when parsing include files. The value must be a single string ,
# which is a path to a file, and may include environment variables
# which will be expanded.
# INCLUDE directives may be nested up to 100 deep .
#
# Examples
#   INCLUDE=config2.conf;   # will look in current directory
#   INCLUDE="$GEMSTONE/data/config3.conf";
# Default: none

#=========================================================================
# KEYFILE: location of GemStone licensing keyfile. Currently only used
# by stone.
# Runtime equivalent: none
# Default: $GEMSTONE/sys/gemstone.key
#KEYFILE = $GEMSTONE/sys/gemstone.key;

#=========================================================================
# LOG_WARNINGS:  Print warnings involving invalid configuration options.
# Default: TRUE
#  Used by all executables
#LOG_WARNINGS = TRUE;

#=========================================================================
# NETLDI_HostAgentUser_cert
#
# Only used with X509 sessions.
# Required in configuration file specified as argument to -E option to startnetldi,
# when NETLDI_START_MIDCACHE=true, or when NETLDI_WARMER_ARGS is non-empty.
#
# A String, the path to a HostAgentUser certificate .pem file.
# Default:  none
#NETLDI_HostAgentUser_cert = ;

#=========================================================================
# NETLDI_HostAgentUser_key
#
# Only used with X509 sessions.
# Required in configuration file specified as argument to -E option to startnetldi,
# when NETLDI_START_MIDCACHE=true, or when NETLDI_WARMER_ARGS is non-empty.
#
# A String, the path to a HostAgentUser private key .pem file.
# Default:  none
#NETLDI_HostAgentUser_key = ;

#=========================================================================
# NETLDI_PORT_RANGE
#
#  Only used with X509 sessions,
#  used in a config file specified with -E argument to startnetldi .
#
# A list of two integers specifying the minimum and maximum of the port
# range to be used for listening sockets in forked gem processes for
# X509 sessions. 
# The two elements must be in the port range 1..65535, and the second
# element must be greater than the first.
#
# Default: not set, random ports in the range used for ephemeral ports.
# The pair of values 10000,65535 will be interpreted as use random ports.
# On Linux the ephemeral port range is in /proc/sys/net/ipv4/ip_local_port_range .
#
#NETLDI_PORT_RANGE = 10000,65535;

#=========================================================================
# NETLDI_START_MIDCACHE
#
#  Only used with X509 sessions,
#  used in a config file specified with -E argument to startnetldi .
#
# If true, the netldi reading this file, when it is starting the shared cache on
# localhost in response to a start request from a starthostagent,  
# will start a hostagent process on localhost and that hostagent 
# will login to the hostagent on the stone's host, to make this cache
# a mid-level cache.
#
# Must be true if the shared cache on localhost is to be used as a mid-level
# cache by sessions created by GciX509Login .
# If true, NETLDI_HostAgentUser_cert and NETLDI_HostAgentUser_key must be specified
# in this config file.
#
# Default: FALSE
#NETLDI_START_MIDCACHE = FALSE;

#=========================================================================
# NETLDI_WARMER_ARGS
#
#  Only used with X509 sessions,
#  used in a config file specified with -E argument to startnetldi .
#  A String specifying how an X509 mid or leaf cache should be warmed.
#  If string is empty, no warming of the newly started cache is performed.
#  The String may contain these options.
#    -n <integer number of threads, in range 1..20>
#    -d  (include data pages>  (if not specified, only warm object table pages)
#    -M <mid cache host name>
#  If NETLDI_START_MIDCACHE=true
#     Warming is based on pages already in the stone or other mid cache.
#     -M specifies host of another already running mid cache on the same stone
#     and the newly started mid cache hostagent will pull pages from the other
#     mid cache. If -M not given, then pages will be pulled from the stone cache.
#     Multiple pusher threads are started in either the source mid cache host
#     agent or in the hostagent on stone host, and those threads scan the
#     source cache pushing pages to the newly started mid cache.
#     If the -M host resolves to localhost, pages will be pulled from the stone cache.
#     If pulling from stone cache, -n is limited to SHR_PUSH_TO_MIDCACHES_THREADS .
#  If NETLDI_START_MIDCACHE=false,
#     Warming is based on the current view as of the login of the warmer session.
#     values for -n above 2 are ignored and the number of threads is set to 2,
#     since a warmer session on an X509 leaf cache has only a single threaded 
#     connection to a mid or stone cache.
#     -M specifies host of another already running mid cache on the same stone
#     and the leaf cache warmer session will connect to that mid cache and
#     thus pull pages from the leaf cache if present; else from stone.
#     If the -M host resolves to localhost, is is ignored.
#
#NETLDI_WARMER_ARGS="";
#=========================================================================
# SHR_NUM_FREE_FRAME_SERVERS
#
# Specifies the number of threads that will be started in the free frame 
# page server process when the shared page cache is created. A value of
# -1 means the default value should be used. On the primary shared page
# cache (the cache to which the stone attaches), the default value is equal
# to the value used for the STN_NUM_LOCAL_AIO_SERVERS parameter. On a 
# remote shared page cache, the default is equal to 1. If specifying
# a value in the config file, specified value must be >= 1 and <= 255.
#
# Default: -1  Min: -1  Max: 255
#
#SHR_NUM_FREE_FRAME_SERVERS = -1;

#=========================================================================
# SHR_PAGE_CACHE_LARGE_MEMORY_PAGE_POLICY
#
# Specifies whether large memory pages will be used when creating the
# shared page cache. Enabling large memory pages can result in
# significant performance gains when large shared page caches are used.
# The improvement is due to a reduction in translation lookaside buffer
# (TLB) cache misses. The TLB is an internal structure used by the
# operating system to manage memory address translation.
#
# Large memory page support is an operating system and hardware dependent
# feature. Currently, GemStone supports large memory pages on AIX and 
# Linux only. This configuration option is silently ignored on all other
# platforms.
#
# 3 policies are available on supported operating systems:
#
# 0 - Disabled:  No large memory page support.
#
# 1 - Advisory:  Large memory pages are requested when the shared page 
#                cache is created. If the operating system denies the 
#                request, a warning is printed in the SPC monitor log
#                file and the cache is started without large memory 
#                pages. NOT RECOMMENDED ON AIX!
#
# 2 - Mandatory: Large memory pages are requested when the shared page 
#                cache is created. If the operating system denies the 
#                request, an error is printed in the SPC monitor log
#                file and the shared page cache fails to start.
#
# Both Linux and AIX require operating system kernel changes in order to
# enable large memory pages. Refer to the release notes for more
# information.
#
# Default: 0  Min: 0  Max: 2
#SHR_PAGE_CACHE_LARGE_MEMORY_PAGE_POLICY = 0;

#=========================================================================
# SHR_PAGE_CACHE_LARGE_MEMORY_PAGE_SIZE_MB
#
# Specifies the large memory page size in megabytes used when creating the
# shared page cache. 
#
# Currently this option is only supported on Linux and is ignored on all
# other platforms. A value of 0 means use the default large page
# size for the host. Normally the default large page size on Linux is 2 MB,
# but that default can be changed by the system administrator.
#
# Valid large page sizes on Linux are 2 MB and 1024 MB. Not all processors
# support one or both large memory page sizes.
#
# This setting is ignored if SHR_PAGE_CACHE_LARGE_MEMORY_PAGE_POLICY is
# set to 0.
#
#  Linux: Default: 2  Min: 0  Max: 1024
# Default units M Bytes,  suffixes KB, MB, GB may be used to specify units.
#SHR_PAGE_CACHE_LARGE_MEMORY_PAGE_SIZE_MB = 0;

#=========================================================================
# SHR_PAGE_CACHE_LOCKED : Specifies whether the shared page cache should
#   locked (frozen) in (main) memory. This is a performance related option.
#   On machines where a portion of memory can be dedicated to GemStone, this
#   option will provide higher performance.
#
#   In order for this option to take effect, the user may require special
#   operating system dependent privileges. If the user does not have
#   the privileges, an error message will be logged and the system will
#   continue.
#
#   On Solaris systems, the shared page cache is created using ISM
#   (intimate shared memory), which also causes the cache to be locked.
#   Hence, this option is no longer used on Solaris.
#
# Default: FALSE
#SHR_PAGE_CACHE_LOCKED = FALSE;

#=========================================================================
# SHR_PAGE_CACHE_NUM_PROCS
#
#   Maximum number of sessions allowed to attach to the shared cache. 
#   This parameter is used to allocate space in the shared page cache 
#   for session information and cache statistics.
#   This cache space is in addition to page space allocated by
#   SHR_PAGE_CACHE_SIZE_KB. This value must accommodate the GcGems and 
#   various background GS processes, as well as user gem/topaz session 
#   processes. Using too small a value will result in sessions being 
#   unable to login because they can't attach to the cache, while too 
#   large a value will result in wasted space in the cache.
#
# Default: -1  
#   The default setting causes the system to calculate a reasonable value 
#   for this parameter.
#   For stone's cache
#           STN_MAX_SESSIONS (for user sessions)
#           + 5 (for stone, pcmon, pagemanager, symbolgem and admingcgem)
#           + STN_MAX_GC_RECLAIM_SESSIONS + 1 (for reclaimgcgems)
#           + SHR_NUM_FREE_FRAME_SERVERS (for free frame threads )
#           + STN_NUM_LOCAL_AIO_SERVERS  (for AIO threads )
#           + 1 logsender
#           + 1 (to allow stopstone to login)
#           + 1 statmonitor
#
#   For a remote cache startup triggered by GciLogin 
#        STN_MAX_SESSIONS + 3(pcmon, free frame thread, statmonitor)
#
#   For a remote cache started with startnetdi -E (for GciX509Login) ,
#   The config file specified by -E should contain SHR_PAGE_CACHE_NUM_PROCS .
#   The default on Linux is half of smaller of maximum open files or
#   maximum size of a semaphore array. On other platforms the default is 256.
#
#   While this value should be adequate for most cases, it may still yield
#   session login failures under special cases, such as:
#
#   * first-time startup of a system that needs to create new extents
#   * adding extents dynamically using SystemRepository>>createExtent:
#   * manually starting AIO or free frame page servers
#
#   Also, this value assumes that ALL sessions in the system will be 
#   attaching to this cache. If your architecture uses remote gem servers 
#   with their own remote caches, you should specify a value for 
#   SHR_PAGE_CACHE_NUM_PROCS using the above calculation but only allocating 
#   space for those sessions running on the local/remote host. For example:
#
#   On stone machine:
#
#           Maximum number of user sessions running on stone machine
#           + 5 (for stone, pcmon, pagemanager, symbolgem, and admingcgem) 
#           + STN_NUM_GC_RECLAIM_SESSIONS (for reclaimgcgems)
#           + SHR_NUM_FREE_FRAME_SERVERS (for free frame threads)
#           + STN_NUM_LOCAL_AIO_SERVERS  (for AIO threads)
#
#   On remote machine:
#
#           Maximum number of user sessions running on remote machine
#           + 2 (for pcmon, pgsvr)
#           + SHR_NUM_FREE_FRAME_SERVERS (for free frame threads)
#
#  
# Minimum:  number of extents (for startup page servers)
#           + 5 (for stone, pcmon, pagemanager, symbolgem and admingcgem)
#           + STN_NUM_GC_RECLAIM_SESSIONS (for reclaimgcgems)
#           + SHR_NUM_FREE_FRAME_SERVERS (for free frame threads)
#           + STN_NUM_LOCAL_AIO_SERVERS (for AIO threads )
#
#   While sufficient for starting the stone, the minimum may not
#   allow additional user or GcGem sessions to attach to the cache,
#   regardless of the setting of STN_MAX_SESSIONS.
#
# Maximum:  STN_MAX_SESSIONS
#           + 5 (for stone, pcmon, pagemanager, symbolgem and admingcgem)
#           + 3 (for hotStandby gem, stopStone gem, and one extra)
#           + 256 (maximum possible value for STN_NUM_GC_RECLAIM_SESSIONS)
#           + 30  (maximum possible value for SHR_NUM_FREE_FRAME_SERVERS)
#           + 256 (maximum possible value for STN_NUM_LOCAL_AIO_SERVERS)
#
#  If a value outside the range of minimum/maximum is specified, a warning
#  message will be printed and the value set to the minimum or maximum
#  as appropriate.
#
# Cache Statistic: (SPC Monitor) SlotsTotalCount
#
#SHR_PAGE_CACHE_NUM_PROCS = -1;

#=========================================================================
# SHR_PAGE_CACHE_NUM_SHARED_COUNTERS:  Number of shared counters available
# in the shared page cache. On most platforms, each counter consumes
# 128 bytes of shared memory. On AIX, each counter consumes 256 bytes of
# shared memory. Shared memory used for shared counters is in addition
# to the shared memory size specified in SHR_PAGE_CACHE_SIZE_KB.
#
# Cache Statistic: (SPC Monitor) NumSharedCounters
#
# Default: 1900 Min: 0 Max: 500000
#SHR_PAGE_CACHE_NUM_SHARED_COUNTERS = 1900;

#=========================================================================
# SHR_PAGE_CACHE_PERMISSIONS:  Specifies the UNIX permission settings
# of the shared page cache expressed as an octal number. The first two
# digits are constant and must always be "06". The leading "0" indicates
# an octal constant is being specified and "6" indicates the UNIX user
# which created the cache has read/write permissions.
# 
# The last two digits specifies the group and other permissions
# respectively.
#
# Each of the last two digits must be one of the following:
#
#  6 - read/write
#  4 - read only
#  0 - no access
# 
# By default, the shared page cache is created with group read/write 
# permission but no access for other users.
#
# Default: 0660
#SHR_PAGE_CACHE_PERMISSIONS = 0660;

#=========================================================================
# SHR_PAGE_CACHE_SIZE_KB:  Size of shared page cache in K Bytes.
# Default: 75000KB, min: 16000KB 
# Maximum: limited by system memory and kernel configurations
# (For Linux kernel,   edit /etc/sysctl.conf  and reboot )
#
# Cache Statistic: (SPC Monitor) FrameCount (1 frame = 16 KB)
# Default units K Bytes,  suffixes KB, MB, GB may be used to specify units.
#SHR_PAGE_CACHE_SIZE_KB = 75000KB;

#=========================================================================
# SHR_PUSH_TO_MIDCACHES_THREADS
#
# Used only in a system that is using X509 sessions.
# In a config file for stone, the total number of page pusher threads across 
# all hostagent processes on stone host that can be used to push pages to mid 
# caches.
#
# On stone host, if > 0, and X509 mid-level caches are in use, then newly 
# committed pages will be pushed to the mid cache by hostagents running on 
# the stone host.
#
# In a config file for startnetldi -E, specifies the maximum number of warmer 
# threads that can be configured in NETLDI_WARMER_ARGS to warm another mid 
# cache from this mid cache.
#
# Default: 0 , Max: 20
#
# SHR_PUSH_TO_MIDCACHES_THREADS = 0;

#=========================================================================
# SHR_SPIN_LOCK_COUNT :  Specifies the number of tries to get a spin lock
#   before sleeping on a semaphore. 
#   In single processor host architectures, this value should be "1" since 
#   there is no value in spinning (it won't change until the process holding
#   the lock gets scheduled). On multiple processor host architectures, 
#   the value will need to be tuned (try starting at around 5000).
#
#   The value -1 can be used to indicate that the system should use the
#   correct default (either 1 or 5000) based upon the number of cpu's
#   available on the host. 
#
# Runtime equivalent: #SpinLockCount
#   May only be changed by SystemUser and only for the stone's cache
#
# Cache Statistic: (SPC Monitor) SpinLockCount
#
# Default: -1  Min: 1 
#SHR_SPIN_LOCK_COUNT = -1;

#=========================================================================
# SHR_TARGET_FREE_FRAME_COUNT
#
#   Specifies the target number of free frames to keep in the shared cache 
#   at all times. The free frame page server process(es) will attempt to 
#   keep the number of free frames in the cache equal to or greater than 
#   this value. 
#
#   If the value of the parameter is -1, the target free frame count is set
#   to a default value. For the primary shared cache (the cache to which
#   the stone attaches), the default is 1/8 the frames in the cache for
#   caches up to 800 MB (50,000 frames) in size. For caches larger than
#   800 MB, the default is 7000 frames. For remote caches, the default
#   is 1000 frames or one hundredth of the frames in the cache, which
#   ever is smaller.
#
#   For best performance, keep this setting greater than GEM_FREE_FRAME_LIMIT.
#
# Cache Statistic: (SPC Monitor) TargetFreeFrameCount
#
# Default: -1  Min: -1  Max: 65535
#SHR_TARGET_FREE_FRAME_COUNT = -1;

#=========================================================================
# SHR_WELL_KNOWN_PORT_NUMBER
#   Port number that the shared page cache monitor will use as its
#   well-known port. The well-known port is used by all gems and page
#   servers on this host to connect to the cache monitor.
#
#   It is an error if the port specified is in use by another process.
#   In that case the monitor process will not start and exits with an
#   error.
#
#   A value of zero causes the port number to be selected by the
#   system.
#
# Default: 0  Min: 0  Max: 65535
#SHR_WELL_KNOWN_PORT_NUMBER = 0;

#=========================================================================
# STN_ADMIN_GC_SESSION_ENABLED
#
# Determines if the administrative garbage collector session is started
# when the stone is started. This gem performs GC functions such as 
# write set union sweeps. This session does not perform dead object or
# page reclamation.
#
# Runtime equivalent: #StnAdminGcSessionEnabled
#    (requires GarbageCollection privilege)
# Default: TRUE
#STN_ADMIN_GC_SESSION_ENABLED = TRUE;

#=========================================================================
# STN_ALLOCATE_HIGH_OOPS 
#   If greater than 0, stone will skip the specified number of non-special
#   object identifiers and start allocating object identifiers (GCI OopType's ) 
#   for non-special objects at the specified oopNumber + 1 
#   This is intended for testing conversion of GCI applications and user actions
#   from Gs64 v1.1 to Gs64 v2.0, and should not be used in production.
#   Large values can cause a long delay during the first startstone after
#   the value is changed in the config file.
#
# Cannot be changed at runtime.
# Default: 0  Min: 0 Max: 549755813888 
#STN_ALLOCATE_HIGH_OOPS = 0;

#=========================================================================
# STN_ALLOW_NFS_EXTENTS
#   If TRUE, stone will startup using extents and tranlogs which are 
#   on NFS-mounted filesystems. This is less reliable and less performant
#   than locally mounted filesystems, or filesystems on storage arrays
#   which appear as local mounts. 
#   Logins from Gem processes which are not on the same machine as stone 
#   will not be allowed; such gems will get errors when 
#   attempting to open the extents.
#
# Cannot be changed at runtime.
# Default: FALSE
#STN_ALLOW_NFS_EXTENTS = FALSE;

#=========================================================================
# STN_ALLOW_NO_SESSION_INIT
#  Enables bypass and allows debugging of GsCurrentSession>>initalize. 
#  If false, GciLogin ignores the flag GCI_CLIENT_DOES_SESSION_INIT. All
#  sessions perform GsCurrentSession>>initialize, and errors are fatal.
#
#  If true,  GciLogin implements the flag GCI_CLIENT_DOES_SESSION_INIT.
#  GsCurrentSession>>initialize is run unless this flag is set or topaz 
#  executes SET SESSIONINIT OFF. Errors in GsCurrentSession>>initialize 
#  are reported but are not fatal errors.
# 
# Runtime equivalent: #StnAllowNoSessionInit 
#         (may only be set by SystemUser)
# Default: FALSE
#STN_ALLOW_NO_SESSION_INIT = FALSE;

#=========================================================================
# STN_ANONYMOUS_SSL
#
 #  If true, the network connections between the stone and other processes
#  and between any non-X509 shrpcmonitor and other processes are encrypted 
#  with Anonymous SSL .
#  If true, GEM_PGSVR_USE_SSL and GEM_RPC_USE_SSL are ignored and
#  the Gci to gem and gem to pgsvr connections will always use SSL .
#  STN_ANONYMOUS_SSL does not affect any connections established using 
#  certificates; those connections always use SSL.
#
# Default: FALSE
# STN_ANONYMOUS_SSL = FALSE;

#=========================================================================
# STN_CACHE_WARMER
#
# Included for compatibility with older releases. Use STN_CACHE_WARMER_ARGS
# for more cache warmer options. It is likely that the STN_CACHE_WARMER 
# config option will be deprecated and removed in a subsequent release of the product.
#
#   Specifies if the cache warmer should be run when the stone is started 
#   and whether to load just the object table pages or both the object 
#   table and the data pages.
#
#  STN_CACHE_WARMER has the following possible values:
#
#  0 - Disabled, the stone does not start the cache warmer. This is the default.
#  1 - Start the cache warmer and load dependency map and object table pages
#  2 - Start the cache warmer and load dependency map, object table and data pages.
# Default: 0
#STN_CACHE_WARMER = 0;

#=========================================================================
# STN_CACHE_WARMER_ARGS
#
# This configuration option can be used to have stone automatically start a 
# cache warmer process on its cache. The options that can be specified here are:
#     -d    read data pages into the cache.
#     -D    read data pages into the UNIX file system buffers
#     -l    stop cache warming if the free frame count falls below <cacheFullLimit>.
#     -n    the number of warmer threads to use
#     -w    enable saving and restoring a workingSet of data pages
#
# Without -d , only object table pages are read into the cache .
# The complete description of the options and default values can be obtained 
# by invoking the command:  $GEMSTONE/bin/startcachewarmer -h
#
# The other options if specified are ignored by the cache warmer when 
# starting from this configuration. The -s <stoneName> is automatically 
# provided, so it is not required.
#
# If this configuration option is specified with a non-empty string, it 
# overrides any settings for STN_CACHE_WARMER and STN_CACHE_WARMER_SESSIONS
# It is likely that the STN_CACHE_WARMER and STN_CACHE_WARMER_SESSIONS will
# be deprecated and removed in a subsequent release of the product.
#
# To specify starting the cache warmer with all default args use " ", 
#   i.e., a string with at least one space so that the argument is not empty.
#
# Example: Start a cachewarmer to load only the object table into the cache
#          using 4 warmer threads.
# STN_CACHE_WARMER_ARGS = "-n 4"
#
# Default: "" (cachewarmer is not started)
#STN_CACHE_WARMER_ARGS = "";

#=========================================================================
# STN_CACHE_WARMER_SESSIONS
#
# Included for compatibility with older releases. Use STN_CACHE_WARMER_ARGS
# for more cache warmer options. It is likely that the STN_CACHE_WARMER 
# config option will be deprecated and removed in a subsequent release of the product.
#
#   Specifies the number of worker sessions to use in the cache warmer gem
#     NOTE: there is always one additional "master" session allocated and
#      the warmer will exit with an error if not enough sessions are available.
#
# Cache Statistic: (Stone) NumCacheWarmers
#
# Units: sessions, 
# Default: 0 - the warmer is run with numberOfCpus + numberOfExtents sessions
# Min: 0 Max: 256
#STN_CACHE_WARMER_SESSIONS = 0;

#=========================================================================
# STN_CACHE_WARMER_WAIT_MODE
#
# Determines if and when startstone waits until cache warming has
# finished. The following values are allowed:
#
# 0 - disabled. startstone does not wait until cache warming has finished.
#
# 1 - startstone waits until cache warming has finished but only if stone
#     is starting after a clean shutdown or without tranlogs
#     (i.e., startstone with -N option). Otherwise startstone does not
#     wait for cache warming to finish. This is the default setting.
#
# 2 - startstone always waits until cache warming has finished.
#
# Has no effect and is ignored if cache warming is not enabled.
#
# Default: 1
# Min: 0 Max: 2
#STN_CACHE_WARMER_WAIT_MODE = 1;

#=========================================================================
# STN_CHECKPOINT_INTERVAL 
#   maximum interval in seconds between checkpoints. Checkpoints may
#   be written more often, depending on other factors.
#
# Runtime equivalent: #StnCheckpointInterval
#         (may only be set by SystemUser)
# Default: 300 , Min: 5 , Max: 1800  Units: seconds 
#STN_CHECKPOINT_INTERVAL = 300;

#=========================================================================
# STN_COMMIT_QUEUE_THRESHOLD
#   Determines if the stone defers disposing commit records based on the
#   number of sessions in the commit queue and the run queue. If the size 
#   of either of these queues is greater than this value, the stone will 
#   defer commit record disposal until all queues have sizes less than or 
#   equal to the value.
#
#   This setting will be ignored if the commit record backlog exceeds
#   the value of STN_CR_BACKLOG_THRESHOLD.
#
#  Runtime equivalent: #StnCommitQueueThreshold
#         (may only be set by SystemUser)
#  Cache Statistic: (Stone) CommitQueueThreshold
#
#  Default: -1 (never defer CR disposal), Min: -1 , Max: 1024
#STN_COMMIT_QUEUE_THRESHOLD = -1;

#=========================================================================
# STN_COMMIT_RECORD_BM_CACHING
#   When true, enables caching at the commit point of page allocation 
#   information needed when disposing a commit record. 
#   This can reduce I/Os during commit record dispose when the commit record
#   backlog is high, or when there is a lot of page preemption occurring 
#   in the shared cache. 
#   When enabled, the maximum commit rate is slightly lower
#   and commit latency is slightly higher because more work is done in
#   the commit critical region in stone.
#
#   Default: true .
#STN_COMMIT_RECORD_BM_CACHING=TRUE;

#=========================================================================
# STN_COMMIT_RECORD_QUEUE_SIZE
#   Determines the size of the stone's internal commit record cache. The
#   stone will keep copies of up to this many commit records in heap 
#   memory. Stone is able to dispose commit records more quickly
#   when a copy of the commit record is found in this cache.
#
#   When the default value of -1 is specified, stone sets this value to be
#   two times the value of the STN_SIGNAL_ABORT_CR_BACKLOG option.
#
# Default: -1  Min: 16  Max: 2000000  Units: Commit Record Pages
#STN_COMMIT_RECORD_QUEUE_SIZE = -1;

#=========================================================================
# STN_COMMITS_ASYNC
#   Setting this to TRUE causes stone to acknowledge each commit or 
#   persistent shared counter update to the requesting session without
#   waiting for the tranlog write(s) for the update to complete.
#   
# Default: FALSE 
#STN_COMMITS_ASYNC = FALSE;

#=========================================================================
# STN_COMMIT_TOKEN_TIMEOUT
#   Maximum interval in seconds that a session may possess the commit
#   token. If the session possess the token for longer than this period,
#   the session will be logged off the system and an error message will be
#   written to the stone log. 
#   If the value is non zero, GcGems of all types will have a timeout
#   of twice the configured value.
#  
# Default: 0 (stone waits forever), Min: 0 , Max: 86400  Units: seconds
#STN_COMMIT_TOKEN_TIMEOUT = 0;

#=========================================================================
# StnConfigFileNames
#
# Runtime read-only config option 
#   System stoneConfigurationAt: #StnConfigFileNames
# Returns an Array , { systemConfigFileName . exeConfigFileName }

#=========================================================================
# STN_CR_BACKLOG_THRESHOLD
#   Determines the size of the commit record backlog above which the stone
#   will aggressively dispose commit records. This setting overrides the
#   deferral of commit record disposal provided by the 
#   STN_COMMIT_QUEUE_THRESHOLD parameter.
#  
#   The default setting of -1 causes stone to use a setting equal to 
#   double the value of STN_MAX_SESSIONS. A setting of 0 disables this
#   threshold.
#
#  Runtime equivalent: #StnCrBacklogThreshold
#         (may only be set by SystemUser)
#  Cache Statistic: (Stone) StnCrBacklogThreshold
#
#  Default: -1, Min: -1, Max: 500000
#STN_CR_BACKLOG_THRESHOLD = -1;

#=========================================================================
# STN_DISABLE_LOGIN_FAILURE_LIMIT
# STN_DISABLE_LOGIN_FAILURE_TIME_LIMIT
#
#   Specifies the limits that control when a user account is disabled
#   because they exceeded the STN_DISABLE_LOGIN_FAILURE_LIMIT of failed
#   login attempts within the time in minutes specified by 
#   STN_DISABLE_LOGIN_FAILURE_TIME_LIMIT. When a user exceeds these
#   limits, the user account is disabled (the system changes the 
#   password on the account to one that is invalid) and a record of 
#   the event is written to the Stone log file. The user account
#   can only be restored by another user with OtherPassword privileges.
#   Runtime equivalents require OtherPassword privilege.
#
# Runtime equivalent: #StnDisableLoginFailureLimit
#                     #StnDisableLoginFailureTimeLimit
# Defaults:
#    STN_DISABLE_LOGIN_FAILURE_LIMIT  15;  Min: 0, Max: 65536
#    STN_DISABLE_LOGIN_FAILURE_TIME_LIMIT 15;  Min: 1, Max: 1440
#
#STN_DISABLE_LOGIN_FAILURE_LIMIT = 15;
#STN_DISABLE_LOGIN_FAILURE_TIME_LIMIT = 15;

#=========================================================================
# STN_DISKFULL_TERMINATION_INTERVAL
#
#  This configuration parameter specifies how soon the stone should
#  start terminating sessions holding on to the oldest commit record 
#  when the repository free space is below the value set for 
#  STN_FREE_SPACE_THRESHOLD. Such sessions are sent the fatal disk full 
#  error.
#
#  Runtime equivalent: #StnDiskfullTerminationInterval 
#         (may only be set by SystemUser)
#  Units: Minutes, Min: 0 (no sessions terminated), Max: 1440) .
#  Default: 3
#STN_DISKFULL_TERMINATION_INTERVAL = 3;

#=========================================================================
# STN_EPOCH_GC_ENABLED
#
#  Determines if epoch garbage collection is allowed to run on the system.
#  Setting this value to TRUE enables epoch garbage collection and 
#  adds a small amount overhead to commit processing.
# 
#  Runtime equivalent: #StnEpochGcEnabled 
#    (requires GarbageCollection privilege)
#  Default: FALSE
#STN_EPOCH_GC_ENABLED = FALSE;

#=========================================================================
# STN_EXTENT_IO_FLAGS
#
#  Specifies what (if any) special I/O flags will be used to open the 
#  database extents. Two kinds of special I/O are supported: direct I/O
#  and concurrent I/O.
#
#  Direct I/O tells the operating system avoid caching extent data in the
#  file system cache. Enabling direct I/O tells the operating system to 
#  treats the database extents as if they were on raw partitions. Direct 
#  I/O may greatly improve database performance in some cases.
#
#  Concurrent I/O is only available to extents running on the Enhanced JFS
#  file system (aka JFS2) on AIX. Setting this flag has no effect on other
#  operating systems.
#
#  If the requested I/O mode is not available, the stone will fail to start
#  and an error message will be printed in the stone log. If this happens,
#  change this option back to zero and restart the stone.
#
#  STN_EXTENT_IO_FLAGS has no effect on extents which reside on raw
#  partitions.
# 
#  Once the stone starts, all processes which open the database extents
#  (gems and page servers) will open the extents using the same I/O flags.
#  This behavior is required by some operating systems.
#
#  STN_EXTENT_IO_FLAGS has the following possible values:
#
#  0 - no special I/O flags. This is the default.
#  1 - enable Direct I/O on all extents on file systems.
#  2 - enable concurrent I/O (AIX only)
#
# Default: 0  Min: 0  Max: 2 (AIX only), 1 (All Others)
#STN_EXTENT_IO_FLAGS = 0;

#=========================================================================
# STN_FREE_FRAME_CACHE_SIZE
#
#  Determines the size of the stone's free frame cache. When using the
#  free frame cache, the stone removes enough frames from the free frame
#  list to refill the cache in a single operation. When adding frames to
#  the free list, the stone will not add them to the list until the free 
#  frame cache is full.
#
#  A value of 0 disables the free frame cache (the gem acquires frames one
#  at a time). A value of -1 means use the default value. The default is
#  0 for caches less than 100 MB and 10 for caches of 100 MB or greater
#  size.
#  
#  Cache Statistic: (Stone) FreeFrameCacheSize
#
# Units: Frames, Min: -1, Max: 63
# Default: -1
#STN_FREE_FRAME_CACHE_SIZE = -1;

#=========================================================================
# STN_FREE_SPACE_THRESHOLD
#   The minimum amount of free space to be available in the repository.
#   If stone cannot maintain this level by growing an extent, it begins
#   to take the following actions to prevent shutdown of the system:
#      1. Becomes more aggressive about disposing commit records.
#      2. Writes a checkpoint if there isn't one in progress.
#      3. Writes message to the stone log
#      4. Prevents new logins except for DataCurator or SystemUser
#      5. Send rtErrFreeSpaceThreshold to sessions logged in as 
#           DataCurator or SystemAdministrator.
#      6. Send each Gem a signal to give up all except 5 unused pages.
#   If free space remains below this level for more than 3 minutes,
#   stone begins processing commands only from DataCurator or SystemUser.
#
#  The default value of 0 specifies a varying freeSpaceThreshold that 
#  is computed when needed as the current size of the repository 
#  divided by 1000, with a minimum value of 5 megabytes.
#
#  Runtime equivalent: #StnFreeSpaceThreshold 
#         (may only be set by SystemUser)
#  Default units M Bytes,  suffixes KB, MB, GB may be used to specify units.
#  Units: Megabytes , Min: 0 Max: 65536MB .
#  Default: 0
#STN_FREE_SPACE_THRESHOLD = 0;

#=========================================================================
# STN_GEM_ABORT_TIMEOUT
# Time that stone will wait for a gem running outside of a 
# transaction to abort to release a commit record, after stone has 
# sent a SignalAbort byte to that gem .
# If the time expires before the gem aborts, the gem will be forcibly 
# aborted by stone; forcible abort means the Gem will receive the error 
# ABORT_ERR_LOST_OT_ROOT (error 3031), and the gem will have to completely 
# reinitialize its object caches.
# Negative timeouts are not allowed. 
# If all sessions referencing a commit record are transactionless , 
# the actual timeout for that commit record will be one fourth of the 
# configured timeout.
#
# Default units Minutes ,  suffix  seconds  specifies units of seconds.
#  If no suffix is given units are Minutes.
#
#  Runtime equivalent: StnGemAbortTimeoutSeconds
#         (may only be set by SystemUser)
#  Name in result of System(c)>>stoneConfigurationReport  STN_GEM_ABORT_TIMEOUT_SECONDS
#
#  Default: 60seconds Min: 5seconds max: 86400seconds
#STN_GEM_ABORT_TIMEOUT = 60seconds;

#=========================================================================
# STN_GEM_INITIAL_TRANSACTION_MODE
#
# Transaction mode of a session immediately after login. 
# Value must be one of    autoBegin , manualBegin , transactionless .
#  See System (class) >> transactionMode .
# 
# Runtime equivalent: #StnGemInitialTransactionMode 
#   (may only be set by SystemUser)
#
# Default:  autoBegin .
# STN_GEM_INITIAL_TRANSACTION_MODE=autoBegin ; 

#=========================================================================
# STN_GEM_LOSTOT_TIMEOUT
#
#   Time in seconds that stone will wait for a gem running outside of a 
#   transaction to respond to a SignalLostOt byte sent to that gem.
#
#   For value = 0, no SignalLostOt is sent, rather stone will
#   immediately stop the session.
#
#   For values > 0, if the session does not respond within this time interval, 
#   the stone will stop the session and retract the session's 
#   commit record. 
#
#   If the session fails to notice a stop session
#   it will eventually be killed as described under STN_GEM_TIMEOUT .
#
# Runtime equivalent: #StnGemLostOtTimeout
#         (may only be set by SystemUser)
# Default: 60  Min: 0  Max: 5000000
#
#STN_GEM_LOSTOT_TIMEOUT = 60;

#=========================================================================
# STN_GEM_PGSVR_CONNECT_TIMEOUT
#  The time in seconds that a remote gem will wait for a connection to
#  a pgsvr on stone's machine to complete. 
# Runtime equivalent: #StnGemPgsvrConnectTimeout
#   (may only be set by SystemUser)
#  Default: 20 Min: 5 Max: 3600
# STN_GEM_PGSVR_CONNECT_TIMEOUT = 20;

#=========================================================================
# STN_GEM_PRIVATE_PGSVR_ENABLED 
#  A Boolean , TRUE means a remote gem will start a private pgsvr process if 
#  the attempt to connect to a multithreaded pgsvr on stone's machine fails.
# Runtime equivalent: #StnGemPrivatePgsvrEnabled 
#   (may only be set by SystemUser)
# Default: FALSE .
# STN_GEM_PRIVATE_PGSVR_ENABLED = FALSE;

#=========================================================================
# STN_GEM_TIMEOUT
#  Time in minutes that Stone will wait for an idle Gem to have some kind of
#  interaction with Stone. A Gem which has not had any interaction with
#  Stone for this amount of time will be terminated by the Stone.
#  Negative timeouts are not allowed. Resolution of timeouts
#  is one half the specified timeout interval. 
#
#  Gems in transactionless state with a valid session are immune from this timeout.
#
#  If non-zero this timeout is also the LoginTimeout, the time allowed for a gem
#  to complete processing of its login to stone, or for a session that
#  has been forcibly stopped to notice the stop .
#  If STN_GEM_TIMEOUT is zero , LoginTimeout is set to 5 minutes.
#  A session which fails to notice a forcible stop within LoginTimeout , will
#  have its gem or topaz -l process killed with a kill -TERM .
#
#  Runtime equivalent: #StnGemTimeout
#         (may only be set by SystemUser)
#  Default: 0 (stone waits forever) Min: 0 
#STN_GEM_TIMEOUT = 0;

#=========================================================================
# STN_GROUP_COMMITS
#
# A value greater than 1, specifies maximum number of commits to
# group into a tranlog write. Grouping is performed only if another
# session is waiting to commit while stone is processing a session's commit.
#
# Default: 10 Min: 1 Max: 20
# STN_GROUP_COMMITS = 10;

#=========================================================================
# STN_HALT_ON_FATAL_ERR
#   If TRUE, stone will halt and dump core if it
#   receives a notification from a gem that the gem died with a fatal error.
#   The value FALSE will cause stone to attempt to keep running if
#   a gem encounters a fatal error.
#
#  Runtime equivalent: #StnHaltOnFatalErr
#         (may only be set by SystemUser)
#  Default: FALSE
#STN_HALT_ON_FATAL_ERR = FALSE;   

#=========================================================================
# STN_LISTENING_ADDRESSES
#
# A list of 0 to 10 addresses upon which stone should 
# listen for login connections .
# If list is empty, default address "::" is used , which means listen on any
# active network interfaces, plus the loopback ("::1") interface .
# Each elements of the list may be a name or a numeric IPv6address.
# Each named address must resolve via getaddrinfo() to at least one address
# legal to listen on, i.e. resolve to the loopback or wildcard address, or
# to an address assigned to a network interface on this machine.
# Each numeric address must be an address legal to listen on.
# Numeric IPv6address may be any form recognized by 
# inet_pton(AF_INET6, address, ...) or by inet_pton(AF_INET, address, ...) 
# on the host operating system. Per RFC 2373 this includes these forms:
#   IPv4 dotted-decimal format,  d.d.d.d
#   IPv6  hex format   x:x:x:x:x:x:x:x
#   IPv4-mapped IPv6   ::FFFF:d.d.d.d 
# where d is an 8 bit decimal number and x is a 16 bit hexadecimal number.
# IPv6 format may contain at most one  ::   which is a contiguous
# group of zeros. 
# The loopback address 0:0:0:0:0:0:0:1  can be written as  ::1  .
# The wildcard address 0:0:0:0:0:0:0:0  can be written as  ::   .
# If the list contains the wildcard address :: , the other elements of
# the list are ignored. If the list does not contain :: , then
# the loopback addresses ::1 and 127.0.0.1 are always listened on
# even if not in the list,
# to support logins from system gems (pagemanager, symbolgem, gc gems, etc).
# See also STN_WELL_KNOWN_PORT_NUMBER below.
# See also internet documents RFC 4291 and RFC 4038 .
#
#  Default: an empty list, equivalent to the following list
#STN_LISTENING_ADDRESSES = "::" ;

#=========================================================================
# STN_LOGIN_LOG_DIR
#
# Specifies a directory where the login log is located when 
# the STN_LOGIN_LOG_ENABLED option is set to TRUE. Otherwise this option
# is ignored. If STN_LOGIN_LOG_DIR is not specified and 
# STN_LOGIN_LOG_ENABLED is set to TRUE, then the login log will be placed
# in the same directory as the stone log.
#
# It is a fatal error if the directory specified is not writable by the 
# stone process.
#
# Default: NONE   Min: 0 entries   Max: 1 entry
#
#STN_LOGIN_LOG_DIR = "";

#=========================================================================
# STN_LOGIN_LOG_ENABLED
#
# Enable the logging of all session login and logout events to a separate
# log file owned by the stone. The file will be named 
# <stoneName>_login_<ts>.log where ts is a timestamp. The file will be
# will be placed in the same directory as the stone log unless the
# STN_LOGIN_LOG_DIR option is specified.
#
# When this feature is enabled, logins and logouts are recorded for all
# sessions by default. Logging may by disabled for a UserProfile by sending
# the #disableLoginLogging message to a UserProfile instance and committing
# the transaction.
#
# The login log file is a text file that contains one line per event. 
# Fields within a line are separated by spaces. The fields logged in each
# line are:
#
#   Timestamp String - time in human-readable form, in double quotes.
#   Timestamp Seconds - seconds from the epoch (January 1, 1970, 00:00 UTC)
#   Event Kind - STARTUP, SHUTDOWN, LOGIN, LOGIN_FAIL, LOGOUT, COMMIT_RESTORE
#   UserName - the UserProfile's userId, or "Stone" for the stone process
#   SessionId
#   ProcessId
#   Real UNIX user ID - numeric value
#   Effective UNIX user ID - numeric value
#   Host Name - node name running the gem process.
#   Gem IP Address
#   Client IP Address - IP Address of the gem's client.
#   NumCommits - number of commits performed by the session.
#   Login UNIX user ID - numeric value
#   KerberosPrincipal - the principal used for passwordless login
#                       enclosed in single quotes, or '' if passwordless
#                       login was not used.
#
# STARTUP and SHUTDOWN records are written to indicate when the stone
# was started and stopped and do not indicate an session login or logout.
#
# Login failures are written for non-exempt sessions that fail a login
# attempt, usually due to specifying a bad password.
#
# Default: FALSE
#
#STN_LOGIN_LOG_ENABLED = FALSE;

#=========================================================================
# STN_LOGIN_LOG_HALT_ON_ERROR
#
# Specifies the behavior of the stone if a write to the login log file
# fails. If this option is set to TRUE, the stone will shutdown if the
# login log file cannot be written due to lack of disk space or any other
# error. If this option is set to  FALSE, the stone does not halt but
# a warning message is printed to the stone log.
#
# Default: FALSE
#
#STN_LOGIN_LOG_HALT_ON_ERROR = FALSE;

#=========================================================================
# STN_LOGIN_LOG_MAX_SIZE
#
# Specifies the maximum size of the login log file in megabytes. Once the
# login log file reaches this size, it will be closed and a new login log
# file will be created. 0 means no file size limitation and the file size
# is not monitored by GemStone.
#
# Default units: M Bytes (1 Megabyte = 1048576 bytes), suffixes KB, MB, GB 
#   may be used to specify units.
# Default: 0 (no size limit) min: 0 max: 1024MB
# Units: Megabytes
#
#STN_LOGIN_LOG_MAX_SIZE = 0;

#=========================================================================
# STN_LOG_IO_FLAGS
#
#  Specifies what (if any) special I/O flags will be used to open the
#  database transaction logs.
#
#  This option is only supported for Solaris and Linux operating systems.
#
#  Direct I/O tells the operating system avoid caching extent data in the
#  file system cache. Enabling direct I/O tells the operating system to
#  treats the database tranlogs as if they were on raw partitions. Direct
#  I/O may greatly improve database performance in some cases.
#
#  If the requested I/O mode is not available (such as on a Solaris ZFS
#  file system), the stone will fail to start and an error message will 
#  be printed in the stone log. If this happens, change this option 
#  back to zero and restart the stone.
#
#  STN_LOG_IO_FLAGS has no effect on tranlogs which reside on raw
#  partitions.
#
#  STN_LOG_IO_FLAGS has the following possible values:
#
#  0 - no special I/O flags. This is the default.
#
#  1 - enable Direct I/O on all tranlogs on Linux or Solaris file systems.
#      On Solaris, requires a UFS file system, not supported on ZFS .
#
# Default: 0  Min: 0  Max: 1 (Linux or Solaris), 0 (all others)
#STN_LOG_IO_FLAGS = 0;

#=========================================================================
# STN_LOG_LOGIN_FAILURE_LIMIT
# STN_LOG_LOGIN_FAILURE_TIME_LIMIT
#
#   Specifies the limits that control when a message is written to the
#   Stone log file if a user has greater than or equal to the
#   STN_LOG_LOGIN_FAILURE_LIMIT number of login failures within the 
#   time in minutes specified by STN_LOG_LOGIN_FAILURE_TIME_LIMIT.
#   Runtime equivalents require OtherPassword privilege.
#
#  Runtime equivalent: #StnLogLoginFailureLimit
#                      #StnLogLoginFailureTimeLimit
# Defaults:
#    STN_LOG_LOGIN_FAILURE_LIMIT  10;  Min: 0, Max: 65536
#    STN_LOG_LOGIN_FAILURE_TIME_LIMIT 10;  Min: 1, Max: 1440
#
#STN_LOG_LOGIN_FAILURE_LIMIT = 10;
#STN_LOG_LOGIN_FAILURE_TIME_LIMIT = 10;

#=========================================================================
# STN_LOOP_NO_WORK_THRESHOLD
#
# Indicates the maximum number of times the stone will continue executing
# its main service loop when there is no work to do. If the stone loops 
# more than this number of times and finds no work, the stone will sleep
# for up to 1 second. The stone will immediately wake up when there is
# any work to be done.
#
# Setting this value to zero disables this feature. Setting this value to
# a non-zero setting, in addition to causing the above behavior, will
# also cause the stone to not sleep whenever any of the following 
# conditions are true and the no work threshold has not been exceeded:
#      
#    -a session holds the commit token
#    -one or more sessions are waiting in the commit queue
#    -one or more sessions are waiting in the run queue.
#
# Setting this parameter to a non-zero value will always cause the stone
# to consume more CPU.
#
# Cache Statistic: (Stone)  StnLoopNoWorkThreshold
# Runtime equivalent: #StnLoopNoWorkThreshold
#        (may only be set by SystemUser)
# Default: 0  Min: 0  Max: 536870911
#STN_LOOP_NO_WORK_THRESHOLD = 0;

#=========================================================================
# STN_MAX_AIO_RATE
#   The maximum IO rate each AIO page server is
#   allowed when performing asynchronous writes. Since the IO rate
#   specified is applied to each page server, the total maximum IO rate
#   on the disk system is this value multiplied by
#   STN_NUM_LOCAL_AIO_SERVERS.
#
#   The page servers use this maximum IO rate for both dirty page and
#   checkpoint writes.
#
#  Maximum increased in to 1 million in v2.4 to support solid state disks.
#
#  Runtime equivalent: #StnMntMaxAioRate
#        (may only be set by SystemUser)
#  Default: 3000 , min: 20, max: 1000000
#STN_MAX_AIO_RATE = 3000;

#=========================================================================
# STN_MAX_AIO_REQUESTS
# The maximum number of asynchronous write requests
# the stone can have pending. If more than this number of asynchronous
# writes are requested, the stone will wait (sleep) until one or more of 
# the pending requests have completed.
#
# Asynchronous write requests are only used to write to the current 
# tranlog.
#
#   Cache Statistic: (Stone) AioNumBuffers
#
#   Default:  MIN( SHR_PAGE_CACHE_NUM_PROCS , 128 )
#   min:  2 * STN_NUM_AIO_WRITE_THREADS  
#   max: 4096
#STN_MAX_AIO_REQUESTS = 128;

#=========================================================================
# STN_MAX_GC_RECLAIM_SESSIONS
#
# The maximum number of page reclaim threads used in the reclaim gem.
# When the default is specified, the actual value is the number of
# extents defined in DBF_EXTENT_NAMES configuration.
#
# Default: 0  Min: 0 Max: 256
#STN_MAX_GC_RECLAIM_SESSIONS = 0;

#=========================================================================
# STN_MAX_LOGIN_LOCK_SPIN_COUNT
#
# Maximum number of times a session will attempt to write lock its user
# security data object at login time before raising a fatal error and
# failing the login. The session will sleep for 100 milliseconds between
# retries.
# 
# Enabling certain UserProfile security features (password aging, etc)
# causes each session to update its user security data object at login
# time and commit. A write lock must be acquired on this object to 
# guarantee the commit succeeds.
#
# Each UserProfile has a unique user security data object. Lock retries
# may be required when 2 sessions attempt to login with the same user ID
# at nearly the same instant. Simultaneous logins that user different
# user IDs never require lock retries.
#
# Repositories that do not enable UserProfile security features are not
# affected by this parameter because the write-lock and commit described
# above are not required at login time.
#
# Runtime equivalent: #StnMaxLoginLockSpinCount
#     (requires SystemControl privilege)
# Default: 100, min: 1, max: 36000
#STN_MAX_LOGIN_LOCK_SPIN_COUNT = 100;

#=========================================================================
# STN_MAX_REMOTE_CACHES: The maximum number of remote shared page caches
# that can be used with this system. Each remote cache is associated
# with a remote host.
#
# Cache Statistic: (Stone) RemoteSharedPageCacheMax
#
# Default: 255, min: 0, max: 10000
#STN_MAX_REMOTE_CACHES = 255;

#=========================================================================
# STN_MAX_SESSIONS: limit on number of simultaneous database sessions
#  (number of Gem logins to Stone, excluding SymbolGem and GcGems). 
#  The actual limit used by Stone is the value of this parameter or the 
#  number of sessions specified by the software license key file, whichever
#  is less.
#
#  If you increase STN_MAX_SESSIONS beyond 40, and SHR_PAGE_CACHE_NUM_PROCS 
#  is not set to -1, this parameter may also need adjustment.
#
# Default: 40 , min: 1, max: 32767
#  Recommended value: 40, unless you are really using more sessions.
#STN_MAX_SESSIONS = 40;

#=========================================================================
# STN_MAX_VOTING_SESSIONS
# The limit on number of sessions that will
# be simultaneously in voting on possible dead objects, at the
# end of a markForCollection or epoch GC. Setting this to a
# value substantially lower than STN_MAX_SESSIONS can help prevent
# the voting on possible dead objects from causing large increases in
# response time of the system.
#
#   Runtime equivalent: #StnMaxVotingSessions
#         (may only be set by SystemUser)
#   Cache Statistic: (Stone) MaxVotingSessions
#
#   Default: 100, min: 1, max 1000000
#STN_MAX_VOTING_SESSIONS = 100;

#=========================================================================
# STN_NUM_AIO_WRITE_THREADS
#
# Number of native threads the stone will start to perform writes to
# the tranlog.
#
#   Cache Statistic: (Stone) StnAioNumWriteThreads
#
#   Default: 4  Min: 4 Max: 256
#STN_NUM_AIO_WRITE_THREADS = 4;

#=========================================================================
# STN_NUM_GC_RECLAIM_SESSIONS
#
# The number of page reclaim threads used in the reclaim gem.
# Must be less than or equal to STN_MAX_GC_RECLAIM_SESSIONS.
# Value of zero disables the reclaim gem.
#
#   Runtime equivalent: #StnNumGcReclaimSessions
#    (requires GarbageCollection privilege)
#   Default: 1  Min: 0 Max: 256
#STN_NUM_GC_RECLAIM_SESSIONS = 1;

#=========================================================================
# STN_NUM_LOCAL_AIO_SERVERS
# Number of threads to be started in the AIO page server process on stone's
# machine. These threads write dirty pages from the shared cache to disk.
#
# This value cannot exceed the number of extents present in the repository.
#
# Default: 1 per extent, or 4 whichever is smaller  
# Min: 1 Max: 256
#STN_NUM_LOCAL_AIO_SERVERS = 1;

#=========================================================================
# STN_OBJ_LOCK_TIMEOUT
#
# Time in seconds that a session is allowed to wait to obtain
# one of the special single object write locks. For more details, see 
#    System class >> waitForApplicationWriteLock:queue:autoRelease: 
#
# Runtime equivalent: #StnObjLockTimeout
#     (requires SystemControl privilege)
# Default: 0 (stone waits forever) Min: 0  Max: 86400
#STN_OBJ_LOCK_TIMEOUT = 0; 

#=========================================================================
# STN_PAGE_MGR_COMPRESSION_ENABLED
#
# Determines if the page manager will compress the list of pages it sends
# to remote shared page caches for removal. If set to TRUE, all lists
# of pages larger than 50 will be compressed before transmission using the
# LZ4_compress() function from the LZ4 compression library. The same
# compressed list is used to send to all remote shared page caches;
# i.e., the compression operation is performed no more than once for
# each list of pages to be sent.
#
# Has no effect on systems which do not use remote shared page caches.
#
# The stone cache statistic PageMgrCompressionEnabled reflects the
# current value of this parameter.
#
# Runtime equivalent: #StnPageMgrCompressionEnabled
#        (may only be set by SystemUser)
# Cache Statistic: (Stone) PageMgrCompressionEnabled
#
# Default: TRUE
#STN_PAGE_MGR_COMPRESSION_ENABLED = TRUE;

#=========================================================================
# STN_PAGE_MGR_MAX_WAIT_TIME
#
# Maximum time the stone will defer servicing the page manager thread 
# because the stone is busy with other tasks. Normally the stone services
# the page manager whenever it has idle time and no session is performing 
# a commit. If the time the page manager has been waiting for service 
# exceeds this value, the stone will service the page manager 
# unconditionally and increment the cache statistic
# PageManagerStarvedCount.
#
# Runtime equivalent: #StnPageMgrMaxWaitTime
#        (may only be set by SystemUser)
# Units: Milliseconds, Default: 200  Min: 1 Max: 1000
#STN_PAGE_MGR_MAX_WAIT_TIME = 200;

#=========================================================================
# STN_PAGE_MGR_PRINT_TIMEOUT_THRESHOLD
#
# A threshold in real seconds used by the page manager to determine if a
# slow response from a remote shared page cache should be printed to the
# page manager log file. If a remote cache takes longer than this number
# of seconds to respond to the page manager, the page manager will print
# a message to the log file. If a remote cache takes less than this
# number of seconds to respond, no message is printed.
#
# Note that this value controls the writing of log messages only.
# The connection to the remote cache will not be terminated by page
# manager unless STN_REMOTE_CACHE_PGSVR_TIMEOUT is exceeded.
#
# The stone cache statistic PageMgrPrintTimeoutThreshold reflects the
# current value of this parameter.
#
# Runtime equivalent: #StnPageMgrPrintTimeoutThreshold
#        (may only be set by SystemUser)
# Cache Statistic: (Stone) PageMgrPrintTimeoutThreshold
#
# Default: 5  Min: 0 Max: 3600
#STN_PAGE_MGR_PRINT_TIMEOUT_THRESHOLD = 5;

#=========================================================================
# STN_PAGE_MGR_REMOVE_MAX_PAGES
#
# Maximum batch size for the page manager. This value is the maximum number 
# of pages the page manager thread gets from other Stone threads in a single
# interaction.
#
# Must be equal to or greater than STN_PAGE_MGR_REMOVE_MIN_PAGES
#
# The stone cache statistic PageMgrRemoveMaxPages reflects the
# current value of this parameter.
#
# Runtime equivalent: #StnPageMgrRemoveMaxPages
#        (may only be set by SystemUser)
# Cache Statistic: (Stone) PageMgrRemoveMaxPages
#
# Default: 16384  Min: 1 Max: 16384
#
#STN_PAGE_MGR_REMOVE_MAX_PAGES = 16384;

#=========================================================================
# STN_PAGE_MGR_REMOVE_MIN_PAGES
#
# Minimum batch size for the page manager thread. When the number of
# pages waiting to be processed by page manager is greater than this value,
# then the page manager will request the pages from the stone and process
# them. Otherwise the page manager will wait until this threshold is
# exceeded before requesting pages from the stone.
#
# Must be equal to or less than STN_PAGE_MGR_REMOVE_MAX_PAGES
#
# The stone cache statistic StnPageMgrRemoveMinPages reflects the
# current value of this parameter.
#
# This parameter was formerly named STN_PAGE_REMOVAL_THRESHOLD in versions
# prior to 3.0 .
#
# Runtime equivalent: #StnPageMgrRemoveMinPages
#        (may only be set by SystemUser)
# Cache Statistic: (Stone) PageMgrRemoveMinPages
#
# Default: 40  Min: 0 Max: 16384
#STN_PAGE_MGR_REMOVE_MIN_PAGES = 40;

#=========================================================================
# STN_PGSVR_PORT_RANGE
#
# A list of two integers specifying the minimum and maximum of the port
# range to be used for listening sockets in page server processes on the
# stone machine. Such page server processes will listen on the first
# available port from this range, using the address that was used by the
# remote gem when it contacted the netldi to start the page server, i.e.
# one of the addresses from the -A argument to that netldi's startnetldi
# command.
#
# The two elements must be in the port range 1..65535, and the second
# element must be greater than the first.
# This config item must be commented out, or specify a list of 2 integers.
#
# Default: not set, random ports in the range used for ephemeral ports.
# The pair of values 10000,65535 will be interpreted as use random ports.
#
# On Linux the ephemeral port range is in /proc/sys/net/ipv4/ip_local_port_range .
#
# STN_PGSVR_PORT_RANGE = 20000,20100;   # example range only

#=========================================================================
# STN_PRIVATE_PAGE_CACHE_KB
# Size of stone private page cache.
#
# Obsolete in version 3.5.0 - the private cache is no longer used.

#=========================================================================
# STN_REMOTE_CACHE_PGSVR_TIMEOUT
#
#   Maximum time in seconds that the page manager thread will wait for a 
#   response from a page server on a remote shared page cache. If no 
#   response is received within the timeout period, all gems attached to 
#   that cache are logged off and a message is written to the stone and 
#   page manager logs.
#   Negative timeouts are not allowed. 
#   A timeout value of zero causes the page manager to wait forever.
#
# Cache Statistic: (Stone) PageMgrRemoteCachePgsvrTimeout
#
# Runtime equivalent: #StnRemoteCachePgsvrTimeout
#     (requires SystemControl privilege)
# Default: 15  Min: 0  Max: 3600
#STN_REMOTE_CACHE_PGSVR_TIMEOUT = 15;

#=========================================================================
# STN_REMOTE_CACHE_STARTUP_TIMEOUT
#
#  Time in seconds allowed for startup of a remote shared cache.
#  This is time from when first gem on the remote machine connects to
#  the stone process until the remote cache completes its connection to 
#  the pagemanager thread in stone. Within this interval the first gem
#  forks the remote cache and that cache has to create its shared memory.
#
#  A scaledTimeout is also computed based on size of a shared cache
#     scaledTimeout := cacheSize <= 32GB 
#         ifTrue:[ (cacheSize / 32GB)  * 120]
#         ifFalse:[ 120 + ((cacheSize - 32GB / 268GB) * 300) ]
#  If the scaledTimeout exceeds the configured value of 
#  STN_REMOTE_CACHE_STARTUP_TIMEOUT , the scaledTimeout is used for that cache.
#
#   Runtime equivalent: #StnRemoteCacheStartupTimeout
#        (may only be set by SystemUser)
#   Default: 60  Min: 10 Max: 1800
#STN_REMOTE_CACHE_STARTUP_TIMEOUT = 60;

#=========================================================================
# STN_REMOTE_CACHE_TIMEOUT
#
#  Time in minutes after the last active process on a remote host logs out
#  before Stone shuts down the Shared Page Cache on that host.
#  Negative timeouts are not allowed.
#  A timeout value of zero causes the stone shutdown the remote cache
#  as soon as possible.
#
#   Runtime equivalent: #StnRemoteCacheTimeout
#        (may only be set by SystemUser)
#   Default: 5  Min: 0 Max: 5000000
#STN_REMOTE_CACHE_TIMEOUT = 5;

#=========================================================================
# STN_SHR_TARGET_PERCENT_DIRTY: 
#   Maximum percentage of the stone's shared page cache which can contain
#   dirty pages without AIO page servers increasing their IO rates.
#   
#  Cache Statistic: (Page Server) TargetPercentDirty
#
#  Runtime equivalent: #ShrPcTargetPercentDirty
#         (may only be set by SystemUser)
#  Default: 20  Min: 1 Max: 90
#STN_SHR_TARGET_PERCENT_DIRTY = 20;

#=========================================================================
# STN_SIGNAL_ABORT_AGGRESSIVE
#    Number of additional sessions to send a SignalAbort to.
#
# If the number of outstanding commit records exceeds 
# STN_SIGNAL_ABORT_CR_BACKLOG, then STN_SIGNAL_ABORT_AGGRESSIVE is
# the maximum number of sessions which will receive SignalAbort when 
# those sessions reference a commit record beyond 
# STN_SIGNAL_ABORT_CR_BACKLOG and newer than the oldest commit record.
#
#  Runtime equivalent: #StnSignalAbortAggressive
#    (requires GarbageCollection privilege)
#  Default: 0  Min: 0  Max: 500
# STN_SIGNAL_ABORT_AGGRESSIVE = 0;

#=========================================================================
# STN_SIGNAL_ABORT_CR_BACKLOG
#
#  Number of old transactions, above which
#  stone will start to generate SignalAbort packets to a gem that is
#  outside of a transaction and referencing the oldest commit record. 
#  Also controls sending of SignalAbort packet to gems that are
#  in transaction and have executed  enableSignaledFinishTransactionError.
#  Within a gem, a SignalAbort packet from the Stone is translated to 
#  a TransactionBacklog exception, if that Exception has been enabled. 
#  See methods
#    System class>> enableSignaledAbortError 
#    System class>> enableSignaledFinishTransactionError
#    TransactionBacklog class >> enableSignalling   .
#
#  Runtime equivalent: #StnSignalAbortCrBacklog
#    (requires GarbageCollection privilege)
#  Default: 20, Min: 2, max: 65536 .
#STN_SIGNAL_ABORT_CR_BACKLOG = 20;

#=========================================================================
# STN_SMC_SPIN_LOCK_COUNT
#  Specifies the number of times a process (gem or page server) waiting 
#  for a response from the stone will check a variable in shared memory
#  before sleeping on a semaphore. Higher values can lead to higher
#  throughput on performance-intensive systems at the expense of higher
#  CPU consumption.
#
#  Setting this value to 0 disables this feature, which causes the client
#  process to always wait on the semaphore without checking the 
#  variable in shared memory.
#
# Runtime equivalent: #StnSmcSpinLockCount
#     (requires SystemControl privilege)
# Cache Statistic: StnSmcSpinLockCount
#
# Default: 5000, Min: 0, Max: 10000000 
#STN_SMC_SPIN_LOCK_COUNT = 5000;

#=========================================================================
# STN_STATMONITOR_ARGS
#
# A list of lists of arguments used to start one or more statmonitor
# processes. If the list is not an empty string, one statmonitor process
# for each element in the list will be automatically started by the stone
# at startup time.
#
# The list of possible statmonitor arguments may be obtained by invoking
# statmonitor with only the "-h" argument. The name of the stone argument to
# statmonitor is passed automatically and must not be included here.
#
# A maximum of 64 argument lists may be specified. Each argument list
# must contain between 2 and 1023 characters. List elements must be
# contained within double quotes and separated by commas.
#
# Example: start two statmonitor processes, the first with a 10 second
#          sample interval and the second with a 60 second sample
#          interval. Both processes place a date and timestamp in the output
#          file name and place the output file in the directory
#          $GEMSTONE/data:
#
# STN_STATMONITOR_ARGS =
#    "-i10 -u5 -F'$GEMSTONE/data/statmon10s_%%S_%%P_%d-%m-%y-%H:%M:%S'",
#    "-i60 -u5 -F'$GEMSTONE/data/statmon60s_%%S_%%P_%d-%m-%y-%H:%M:%S'";
#
# Default: "" (Statmonitor will not be started)
#STN_STATMONITOR_ARGS = "";

#=========================================================================
# STN_STONE_CACHE_STARTUP_TIMEOUT
#
#  Time in seconds allowed for the startup of the shared cache on the 
#  stone machine. This is time from when the stone forks the page cache
#  monitor process until it is able to complete its connection to that process.
#
#  A scaledTimeout is also computed based on the size of the shared cache
#   scaledTimeout := cacheSize <= 32GB ifTrue:[ (cacheSize / 32GB)  * 120]
#                   ifFalse:[ 120 + ((cacheSize - 32GB / 268GB) * 300) ]
#  If the scaledTimeout exceeds the configured value of 
#  STN_STONE_CACHE_STARTUP_TIMEOUT , the scaledTimeout is used for that cache.
#
#   Default: 60  Min: 10 Max: 1800
#STN_STONE_CACHE_STARTUP_TIMEOUT = 60;

#=========================================================================
# STN_SYMBOL_GC_ENABLED
#
#  Determines if symbol garbage collection is allowed to run on the system
#  Setting this value to true enables symbol garbage collection.
# 
#  Runtime equivalent: #StnSymbolGcEnabled
#    (requires GarbageCollection privilege)
# Default: FALSE
#STN_SYMBOL_GC_ENABLED = FALSE;

#=========================================================================
# STN_SYMBOL_GEM_TEMPOBJ_CACHE_SIZE
#
#  Temporary object memory size of the Symbol Gem .
#
#  Runtime equivalent: #StnSymbolGemTocSize   .
#  StnSymbolGemTocSize is initialized from STN_SYMBOL_GEM_TEMPOBJ_CACHE_SIZE
#  at stone startup. If the Symbol Gem dies other than from an explicit
#  execution of   System stopSymbolGem,  then the first auto restart since
#  the latter of stone startup or runtime change to StnSymbolGemTocSize
#  will double the value of StnSymbolGemTocSize .
#
#  If repository conversion is detected at stone startup (startstone -C)
#  the default is 200MB .
#
# Default units: KB. Suffixes KB, MB, GB may be used to specify units.
# Default: 20MB Min: 10000KB Max: 10GB .
#STN_SYMBOL_GEM_TEMPOBJ_CACHE_SIZE = 20MB ;

#=========================================================================
# STN_TRAN_FULL_LOGGING
#    If TRUE, all transactions are logged, and log files are not deleted
#  by the system. If an element in STN_TRAN_LOG_DIRECTORIES is a raw partition,
#  the contents of that partition must be copied to a file system with
#  copydbf and the partition erased with removedbf before that element of
#  STN_TRAN_LOG_DIRECTORIES is needed again. Likewise, log files must
#  be moved out of directories within STN_TRAN_LOG_DIRECTORIES to
#  prevent file systems from filling up.
#
#    If FALSE, only transactions smaller than STN_TRAN_LOG_LIMIT are logged; 
#  larger transactions become checkpoints, and log files are deleted by
#  the system when the circular list of log directories wraps around.
#
#  Once stone has been started on a repository with 
#      STN_TRAN_FULL_LOGGING = TRUE, then the TRUE state
#  will persist in the repository and subsequent changes to this parameter
#  in the config file will be ignored. To change the repository back to
#  partial logging you must do a full backup and then restore the backup into
#  a copy of $GEMSTONE/bin/extent0.dbf .
#
# There is no default value.
# An explicit value of TRUE is provided at the end of this file.

#=========================================================================
# STN_TRAN_LOG_DEBUG_LEVEL
# For GemStone internal use. Customers should use default value 0.
# Values >= 2 inhibit removal of old tranlogs when in partial logging mode.
#
# Runtime equivalent: #StnTranLogDebugLevel
#     (requires SystemControl privilege)
# Default: 0 , min: 0 , max: 5 .
#STN_TRAN_LOG_DEBUG_LEVEL = 0;

#=========================================================================
# STN_TRAN_LOG_DIRECTORIES
#   List of directories or raw disk partitions used for transaction
#   logging.  
#
#   An individual raw Unix disk partition may only occur once in this list. 
#   A directory may occur multiple times, if the file system containing the
#   directory contains enough space for multiple logs .
#
#   This list must contain at least one entry, maximum is 100 entries.
#   Entries can be added at runtime via Repository>>addTransactionLog:size: ,
#   not to exceed 100 entries total.
#
#   On UNIX systems, the null device /dev/null may be specified to prevent
#   tranlogs from being written.
#   EXTREME CARE SHOULD BE TAKEN WHEN /dev/null IS USED, operating system 
#   crash will cause loss of committed transactions since the last checkpoint!!!
#
#   On Linux, CIFS filesystems are not allowed for tranlogs.
#
#   If the system crashes while operating in this mode, all
#   transactions after the last completed checkpoint will be
#   lost.
#
# Default: NONE
# A value for this option is provided at the end of this file.

#=========================================================================
# STN_TRAN_LOG_LIMIT
# When  STN_TRAN_FULL_LOGGING = FALSE, transactions consuming more than 
# this amount of log file space will be promoted to a checkpoint. 
#
# Runtime equivalent: #StnTranLogLimit
#        (may only be set by SystemUser)
# Default units: K Bytes,  suffixes KB, MB, GB may be used to specify units.
# Default: 1000KB  Min: 25KB Max: 1000KB  Units: KBytes
#STN_TRAN_LOG_LIMIT = 1000KB;

#=========================================================================
# STN_TRAN_LOG_PREFIX
#
#   File name prefixes of transaction log files. A value of "tranlog"
#   will produce filenames tranlog1.dbf, tranlog2.dbf .... etc.
#   for the transaction log files. (Valid only for log files which
#   are not on raw Unix partitions)
#   
# Default: tranlog
#STN_TRAN_LOG_PREFIX = tranlog;

#=========================================================================
# STN_TRAN_LOG_SIZES
#   Maximum size of log files, must have same number of elements as
#   STN_TRAN_LOG_DIRECTORIES. 
#  Units: Megabytes , Min: 10MB, Max: 16384MB     (1 Megabyte = 1048576 bytes) .
#  This list must contain at least one entry.
# Default units M Bytes,  suffixes KB, MB, GB may be used to specify units.
# Default: NONE
# Recommended value >= 100MB .
# A value for this option is provided at the end of this file.

#=========================================================================
# STN_TRANQ_TO_RUNQ_THRESHOLD
#   Renamed and semantics changed in Gs64 v3.4 ,
#   previous name was STN_TRAN_Q_TO_RUN_Q_THRESHOLD .
#   Number of sessions in the commit queue (waiting for the commit token)
#   allowed to simultaneously process unions (read old commit records)
#   while waiting for the commit token. 
#
#   Example: if this parameter is set to 2 , then sessions commitQueue[1]
#   and commitQueue[2] (if they exist) will process unions. The first 
#   session in the commit queue , commitQueue[0], will never process 
#   unions since it will receive the token when the current commit completes.
#
# Cache Statistic: (Stone) StnTranQToRunQThreshold
#
# Runtime equivalent: #StnTranqToRunqThreshold   (previously #StnTranQToRunQThreshold)
#        (may only be set by SystemUser)
# Default: 2  Min: 1  Max: 20 ;
#STN_TRANQ_TO_RUNQ_THRESHOLD=2;

#=========================================================================
# STN_WELL_KNOWN_PORT_NUMBER
#   Port number that the stone will use to listen for logins from gems.
#
#   It is an error if the port specified is in use by another process.
#   In that case the stone will not start and will exit with an error.
#
#   A value of zero causes the port number to be selected by the
#   system.
#   The range 1..1024 should not be used unless stone is to be run as root.
#   The same port is used for all addresses in STN_LISTENING_ADDRESSES.
#
# Default: 0  Min: 1  Max: 65535
#STN_WELL_KNOWN_PORT_NUMBER = 0;

#=========================================================================
# End of Default GemStone Configuration Options
#=========================================================================

#=========================================================================
# Following options _must_ be set for proper database operation; no defaults
# are provided.
#=========================================================================

DBF_EXTENT_NAMES = $GEMSTONE/data/extent0.dbf;
STN_TRAN_FULL_LOGGING = TRUE;
STN_TRAN_LOG_DIRECTORIES = $GEMSTONE/data/;
STN_TRAN_LOG_SIZES = 100 MB;

#=========================================================================
# Options below here have been added, either by the GemStone system
# administrator, or automatically by the database monitor (Stone).
#=========================================================================

#=========================================================================
# Customized options: Rather than customize options above (where they
# are commented), I find it easier to keep track of customized options
# by placing them together.  Search backwards to find documentation on
# these options.
# =========================================================================

# I recommend that you use whatever "secret" mechanism your cloud
# platform supports to provide your GemStone key.  Depending on your
# platform, look at: https://docs.docker.com/engine/swarm/secrets/,
# https://kubernetes.io/docs/concepts/configuration/secret/,
# https://aws.amazon.com/secrets-manager/,
# https://cloud.google.com/solutions/secrets-management/.
#
# The default build script places the community starter key at this
# location.
KEYFILE = /gemstone-keys/gemstone.key;

# When you start your docker container, be sure to specify --shm-size
# large enough to support your Gemstone shared page cache.  For
# example: docker run --shm-size 1G gemstone
SHR_PAGE_CACHE_SIZE_KB = 75000KB;
